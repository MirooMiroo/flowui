{"version":3,"sources":["src/node_modules/browser-pack/_prelude.js","flowui.js","src/src/dialog/js/helpers.js","src/src/dialog/js/index.js","src/src/loader/js/index.js","src/src/modal/js/index.js","src/src/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","FlowUI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Helpers","value","element","to","duration","_this","start","scrollTop","change","increment","animateScroll","elapsedTime","position","easeInOut","setTimeout","currentTime","2","Modal","Loader","Dialog","_ref","id","title","html","url","promise","buttons","_ref$options","options","undefined","Date","getTime","DialogOptions","type","modalObj","loaderObj","dialogElement","parent","document","body","_renderDialog","_attachEvents","_registerEventListeners","_exportObjInstance","_dialogs","children","_modals","m","modalId","_this2","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","_this3","_renderModal","contentPromise","_getContent","container","createElement","setAttribute","className","contentWrapper","innerHTML","appendChild","content","then","closeButtonElement","onclick","_close","bind","buttonsWrapper","x","forEach","button","buttonElement","href","close","_bindScripts","_positionDialog","_focus","getElementById","viewportHeight","Math","max","documentElement","clientHeight","innerHeight","dialogHeight","clientWidth","innerWidth","offsetHeight","scrollPosition","offsetWidth","scrollY","y","style","top","_scrollToDialog","yPosition","offsetTop","scrollTo","scripts","Array","from","getElementsByTagName","externalScripts","embeddedScripts","script","src","push","loadScripts","scriptsArray","onComplete","newScript","addEventListener","console","log","shift","text","_this4","events","onclose","_setState","_dispose","modalHasChildDialogs","childDialogs","flowObject","_this5","parentNode","removeChild","ex","flowObj","_reactivatePreviousDialog","allDialogs","previousDialog","keys","_this6","sanitizeClasses","classes","detail","animation","stackable","out","state","event","CustomEvent","dispatchEvent","dialog","_this7","escapable","keyCode","_onStateChange","get","_ref2","_ref2$stackable","_ref2$escapable","_ref2$animation","_ref2$events","in","onopen","../../loader/js/index.js","../../modal/js/index.js","./helpers.js","3","_typeof","Symbol","iterator","obj","constructor","arguments","querySelector","_render","_loaders","loaderElement","_centerVertically","_animateIn","parentHeight","loaderHeight","loaderWidth","topLoaderDiv","left","display","dispose","_animateOut","4","assign","modalElement","replace","5","./dialog/js/index.js","./loader/js/index.js","./modal/js/index.js"],"mappings":"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","file":"flowui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.FlowUI = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n    function Helpers() {\n        _classCallCheck(this, Helpers);\n    }\n\n    _createClass(Helpers, null, [{\n        key: \"scrollTo\",\n\n\n        /**\r\n         * Scroll to\r\n         * @param element\r\n         * @param to\r\n         * @param duration\r\n         */\n\n        value: function scrollTo(element, to, duration) {\n\n            var _this = this;\n\n            var start = element.scrollTop,\n                change = to - start,\n                increment = 20;\n\n            var animateScroll = function animateScroll(elapsedTime) {\n                elapsedTime += increment;\n                var position = _this.easeInOut(elapsedTime, start, change, duration);\n                element.scrollTop = position;\n                if (elapsedTime < duration) {\n                    setTimeout(function () {\n                        animateScroll(elapsedTime);\n                    }, increment);\n                }\n            };\n\n            animateScroll(0);\n        }\n\n        /**\r\n         * Easing Function for Scrolling\r\n         * @param currentTime\r\n         * @param start\r\n         * @param change\r\n         * @param duration\r\n         * @returns {*}\r\n         */\n\n    }, {\n        key: \"easeInOut\",\n        value: function easeInOut(currentTime, start, change, duration) {\n            currentTime /= duration / 2;\n            if (currentTime < 1) {\n                return change / 2 * currentTime * currentTime + start;\n            }\n            currentTime -= 1;\n            return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;\n        }\n    }]);\n\n    return Helpers;\n}();\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Helpers = require('./helpers.js');\nvar Modal = require('../../modal/js/index.js');\nvar Loader = require('../../loader/js/index.js');\n\nmodule.exports = function () {\n\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\n\n    function Dialog(_ref) {\n        var id = _ref.id,\n            title = _ref.title,\n            html = _ref.html,\n            url = _ref.url,\n            promise = _ref.promise,\n            buttons = _ref.buttons,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n\n        _classCallCheck(this, Dialog);\n\n        // Arguments\n        this.id = id || \"dialog-\" + new Date().getTime();\n        this.title = title;\n        this.html = html;\n        this.url = url;\n        this.promise = promise;\n        this.buttons = buttons;\n\n        this.options = new DialogOptions(options);\n\n        // Public Properties\n        this.type = \"dialog\";\n        this.modalObj;\n        this.loaderObj;\n        this.dialogElement = null;\n        this.parent = document.body;\n\n        window['FlowUI'] = window['FlowUI'] || {};\n\n        this._renderDialog();\n        this._attachEvents();\n        this._registerEventListeners();\n        this._exportObjInstance();\n    }\n\n    _createClass(Dialog, [{\n        key: '_exportObjInstance',\n\n\n        /**\r\n         * Save reference to instantiated dialog's to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\n            window['FlowUI']._dialogs[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: '_renderModal',\n        value: function _renderModal() {\n\n            // Check if modal already exists for parent\n            if (window['FlowUI']._modals) {\n                for (var key in window['FlowUI']._modals) {\n                    var m = window['FlowUI']._modals[key];\n                    if (m.parent == this.parent) {\n                        this.modalObj = window['FlowUI']._modals[m.id];\n                    }\n                }\n            }\n\n            // If it doesn't exist, create new instance\n            if (!this.modalObj) {\n                this.modalObj = new Modal();\n            }\n\n            // If dialog content requires http request, show loader before rendering\n            if (this.url || this.promise) {\n                this.loaderObj = new Loader({\n                    modalId: this.modalObj.id\n                });\n            }\n        }\n\n        /**\r\n         * Get Dialog Content (Async)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_getContent',\n        value: function _getContent() {\n            var _this2 = this;\n\n            // If promise provided during instantiation, use promise object instead to get content\n            if (this.promise) {\n                return this.promise;\n            }\n\n            return new Promise(function (resolve, reject) {\n\n                // Static content provided as property\n                if (_this2.html) {\n                    resolve(_this2.html);\n                }\n\n                // Content from a partial or template retreived via http\n                else if (_this2.url) {\n\n                        // Do the usual XHR stuff\n                        var req = new XMLHttpRequest();\n                        req.open('GET', _this2.url);\n\n                        req.onload = function () {\n                            if (req.status == 200) {\n                                // Resolve the promise with the response text\n                                resolve(req.response);\n                            } else {\n                                reject(Error(req.statusText));\n                            }\n                        };\n\n                        req.onerror = function () {\n                            reject(Error(\"Network Error\"));\n                        };\n\n                        req.send();\n                    }\n            });\n        }\n\n        /**\r\n         * Render Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: '_renderDialog',\n        value: function _renderDialog() {\n            var _this3 = this;\n\n            this._renderModal();\n            var contentPromise = this._getContent();\n\n            // Render Container\n            var container = document.createElement(\"div\");\n            container.setAttribute('id', this.id);\n            container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\n            //container.style.display = \"none\";\n\n            // Render Content Wrapper\n            var contentWrapper = document.createElement('div');\n            contentWrapper.setAttribute('class', 'content');\n            if (this.title) {\n                var title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = this.title;\n                contentWrapper.appendChild(title);\n            }\n\n            // Render Inner Content\n            var content = document.createElement('div');\n            contentPromise.then(function (html) {\n                content.innerHTML = html;\n            });\n            content.setAttribute('class', 'inner-content');\n            contentWrapper.appendChild(content);\n\n            // Render Close Button\n            var closeButtonElement = document.createElement('a');\n            closeButtonElement.onclick = this._close.bind(this);\n            closeButtonElement.className = \"close\";\n            contentWrapper.appendChild(closeButtonElement);\n\n            // Render Buttons\n            if (this.buttons && this.buttons.length > 0) {\n                (function () {\n                    var buttonsWrapper = document.createElement('div');\n                    buttonsWrapper.setAttribute('class', 'buttons');\n                    var x = 0;\n                    _this3.buttons.forEach(function (button) {\n                        var buttonElement = document.createElement(\"a\");\n                        buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\n                        buttonElement.innerHTML = button.title;\n                        buttonElement.onclick = button.onclick;\n                        buttonElement.href = button.href || 'javascript:;';\n                        buttonsWrapper.appendChild(buttonElement);\n                    });\n                    contentWrapper.appendChild(buttonsWrapper);\n                })();\n            }\n\n            container.appendChild(contentWrapper);\n\n            // Add to modal\n            this.modalObj.element.appendChild(container);\n\n            // Store dialog element to class property\n            this.dialogElement = container;\n\n            // Once content loaded, display\n            contentPromise.then(function () {\n\n                // Hide Loader\n                if (_this3.loaderObj) {\n                    _this3.loaderObj.close(false);\n                }\n\n                _this3._bindScripts();\n                _this3._positionDialog();\n                _this3._focus();\n            });\n        }\n\n        /**\r\n         * Positions Dialog in center of viewport,\r\n         * scrolling page to top of Dialog if needed\r\n         * @private\r\n         */\n\n    }, {\n        key: '_positionDialog',\n        value: function _positionDialog() {\n\n            var dialogElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            var dialogHeight = dialogElement.offsetHeight;\n            var dialogWidth = dialogElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            var y = scrollPosition + viewportHeight / 2 - dialogHeight / 2;\n            y = y < 0 ? 30 : y;\n\n            dialogElement.style.top = y + 'px';\n\n            // If dialog heigh doesn't fit in viewport, scroll page to top of dialog\n            if (dialogHeight > viewportHeight) {\n                this._scrollToDialog();\n            }\n        }\n\n        /**\r\n         * Scroll Page to top of Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: '_scrollToDialog',\n        value: function _scrollToDialog() {\n\n            var yPosition = this.dialogElement.offsetTop - 30;\n            yPosition = yPosition < 0 ? 0 : yPosition;\n            Helpers.scrollTo(document.body, yPosition, 1000);\n        }\n\n        /**\r\n         * Bind Scripts\r\n         * Dialog content can contain scripts, which need to be added to dom in order to be made available\r\n         * @private\r\n         */\n\n    }, {\n        key: '_bindScripts',\n        value: function _bindScripts() {\n\n            var scripts = Array.from(this.dialogElement.getElementsByTagName('script'));\n            var externalScripts = [];\n            var embeddedScripts = [];\n\n            // Separate external script from embedded\n            scripts.forEach(function (script) {\n                if (script.src == \"\") {\n                    embeddedScripts.push(script);\n                } else {\n                    externalScripts.push(script.src);\n                }\n            });\n\n            // Helper function to load array of external scripts\n            var loadScripts = function loadScripts(scriptsArray, onComplete) {\n\n                if (scriptsArray.length > 0) {\n                    var newScript = document.createElement('script');\n                    newScript.type = 'text/javascript';\n                    newScript.src = scriptsArray[0];\n                    document.documentElement.appendChild(newScript);\n\n                    newScript.addEventListener(\"load\", function () {\n                        console.log('External script from content loaded:', scriptsArray[0]);\n                        scriptsArray.shift();\n                        loadScripts(scriptsArray, onComplete);\n                    }, false);\n                } else {\n                    onComplete();\n                }\n            };\n\n            // First, load external scripts\n            loadScripts(externalScripts, function () {\n\n                // Once all external scripts loaded, add embedded scripts\n                embeddedScripts.forEach(function (script) {\n                    var newScript = document.createElement('script');\n                    newScript.text = script.innerHTML;\n                    document.documentElement.appendChild(newScript);\n                    console.log('Embedded script from content added');\n                });\n            });\n        }\n\n        /**\r\n         * Handle Closing Dialog and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: '_close',\n        value: function _close() {\n            var _this4 = this;\n\n            if (this.options.events.onclose) {\n                this.options.events.onclose();\n            }\n            this._setState('closed');\n            this._dispose();\n\n            // Only close modal if there's no other dialogs using it\n            var modalHasChildDialogs = function modalHasChildDialogs() {\n                var childDialogs = [];\n                for (var key in _this4.modalObj.children) {\n                    var flowObject = _this4.modalObj.children[key];\n                    if (flowObject.type === 'dialog') {\n                        childDialogs.push(flowObject);\n                    }\n                }\n                return childDialogs.length > 0;\n            };\n\n            if (!modalHasChildDialogs()) {\n                this.modalObj.close();\n            }\n        }\n\n        /**\r\n         * Remove instance from global window scope and check if another dialog\r\n         * should be made active\r\n         * @private\r\n         */\n\n    }, {\n        key: '_dispose',\n        value: function _dispose() {\n            var _this5 = this;\n\n            // TO DO: Element from Remove from DOM\n            setTimeout(function () {\n                try {\n                    _this5.dialogElement.parentNode.removeChild(_this5.dialogElement);\n                } catch (ex) {\n                    // modal obj already removed\n                }\n            }, 1000);\n\n            // Delete object reference from parent modal's children\n            for (var key in this.modalObj.children) {\n                var flowObj = this.modalObj.children[key];\n                if (flowObj.id == this.id) {\n                    delete this.modalObj.children[this.id];\n                }\n            }\n\n            delete window['FlowUI']._dialogs[this.id];\n\n            this._reactivatePreviousDialog();\n        }\n\n        /**\r\n         * Reactives previous dialog (if any)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_reactivatePreviousDialog',\n        value: function _reactivatePreviousDialog() {\n            var allDialogs = window['FlowUI']._dialogs;\n            var previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]];\n            if (previousDialog) {\n                setTimeout(function () {\n                    previousDialog._focus();\n                }, 500);\n            }\n        }\n\n        /**\r\n         * Handle Dialog State Change (focus, inactive, dismissed)\r\n         * @param e\r\n         * @returns {string}\r\n         * @private\r\n         */\n\n    }, {\n        key: '_onStateChange',\n        value: function _onStateChange(e) {\n            var _this6 = this;\n\n            // Strip out any additional classes added after\n            var sanitizeClasses = function sanitizeClasses() {\n                var classes = \"flowui-dialog animated \" + _this6.options.className;\n                return classes;\n            };\n\n            document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\n\n            switch (e.detail.status) {\n                case 'active':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.in;\n                    break;\n                case 'inactive':\n                    // If dialog isn't stackable, instead of just inacivating - we ne to also dispose\n                    if (!this.options.stackable) {\n                        document.getElementById(this.id).className = sanitizeClasses() + ' inactive';\n                        this._dispose();\n                        break;\n                    }\n                    if (Object.keys(window['FlowUI']._dialogs).length > 1) {\n                        document.getElementById(this.id).className = sanitizeClasses() + ' inactive';\n                        break;\n                    }\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                case 'closed':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                default:\n                // catch all\n            }\n        }\n\n        /**\r\n         * Set Dialog State (active, inactive)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_setState',\n        value: function _setState(state) {\n\n            var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\n            this.dialogElement.dispatchEvent(event);\n        }\n\n        /**\r\n         * Sets active dialog, and inactivates others\r\n         * @private\r\n         */\n\n    }, {\n        key: '_focus',\n        value: function _focus() {\n\n            var _this = this;\n            this._setState(\"active\");\n\n            var allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\n            for (var key in allDialogs) {\n                var dialog = allDialogs[key];\n                if (dialog.id != _this.id) {\n                    dialog._setState(\"inactive\");\n                }\n            }\n        }\n\n        /**\r\n         * Bind any necessary events\r\n         * @private\r\n         */\n\n    }, {\n        key: '_attachEvents',\n        value: function _attachEvents() {\n            var _this7 = this;\n\n            // Allow user to hit escape to close window (unless overwritten by param)\n            if (this.options.escapable) {\n                window.addEventListener(\"keyup\", function (event) {\n                    if (event.keyCode == 27) {\n                        _this7._close();\n                    }\n                }, false);\n            }\n        }\n\n        /**\r\n         * Register for any event listeners\r\n         * @private\r\n         */\n\n    }, {\n        key: '_registerEventListeners',\n        value: function _registerEventListeners() {\n\n            // Listen for dialog state change event\n            this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\n        }\n    }, {\n        key: 'close',\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: 'dispose',\n        get: function get() {\n            return this._dispose;\n        }\n    }]);\n\n    return Dialog;\n}();\n\n/**\r\n * Options to customize Dialog\r\n */\n\nvar DialogOptions = function DialogOptions(_ref2) {\n    var className = _ref2.className,\n        _ref2$stackable = _ref2.stackable,\n        stackable = _ref2$stackable === undefined ? false : _ref2$stackable,\n        _ref2$escapable = _ref2.escapable,\n        escapable = _ref2$escapable === undefined ? true : _ref2$escapable,\n        _ref2$animation = _ref2.animation,\n        animation = _ref2$animation === undefined ? {} : _ref2$animation,\n        _ref2$events = _ref2.events,\n        events = _ref2$events === undefined ? {} : _ref2$events;\n\n    _classCallCheck(this, DialogOptions);\n\n    this.className = className || '';\n    this.escapable = escapable;\n    this.stackable = stackable;\n    this.animation = {\n        in: animation.in || 'pulseIn',\n        out: animation.out || 'pulseOut'\n    }, this.events = {\n        onopen: events.onopen || null,\n        onclose: events.onclose || null\n    };\n};\n\n},{\"../../loader/js/index.js\":3,\"../../modal/js/index.js\":4,\"./helpers.js\":1}],3:[function(require,module,exports){\n'use strict';\n\n// Dependencies\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Modal = require('../../modal/js/index.js');\n\nmodule.exports = function () {\n\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\n    function Loader() {\n        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, Loader);\n\n        this.id = props.id || \"loader-\" + new Date().getTime();\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\n        this.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n        this.modalObj;\n\n        this.type = \"loader\";\n\n        window['FlowUI'] = window['FlowUI'] || {};\n\n        this._render();\n        this._exportObjInstance();\n    }\n\n    _createClass(Loader, [{\n        key: '_exportObjInstance',\n\n\n        /**\r\n         * Save reference to instantiated modal to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._loaders = window['FlowUI']._loaders || {};\n            window['FlowUI']._loaders[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         *\r\n         * @private\r\n         */\n\n    }, {\n        key: '_render',\n        value: function _render() {\n\n            this._renderModal();\n\n            // Check that element doesn't already exist\n            if (!document.getElementById(this.id)) {\n                var container = document.createElement(\"div\");\n                container.id = this.id;\n                container.className = \"flowui-loader\";\n\n                var loaderElement = document.createElement(\"div\");\n                loaderElement.className = \"spinner\";\n                container.appendChild(loaderElement);\n\n                document.getElementById(this.modalObj.id).appendChild(container);\n            }\n\n            this._centerVertically();\n            this._animateIn();\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: '_renderModal',\n        value: function _renderModal() {\n            this.modalObj = new Modal({\n                id: this.modalId,\n                parent: this.parent\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Parent Element\r\n         * @private\r\n         */\n\n    }, {\n        key: '_centerVertically',\n        value: function _centerVertically() {\n\n            var loaderElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\n            var loaderHeight = loaderElement.offsetHeight;\n            var loaderWidth = loaderElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // Center vertically in parent container\n            var topLoaderDiv = parentHeight / 2 - loaderHeight / 2;\n\n            // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\n            if (parentHeight > viewportHeight) {\n                topLoaderDiv = viewportHeight / 2 - loaderHeight / 2;\n\n                // If user is scrolled down at all, we need to adjust to make sure loader\n                // is displayed within current viewport\n                if (scrollPosition > 0) {\n                    topLoaderDiv += scrollPosition;\n                }\n            }\n\n            loaderElement.style.top = topLoaderDiv + \"px\";\n            loaderElement.style.left = 'calc(50% - ' + loaderWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handles Animating Dialog In\r\n         * @private\r\n         */\n\n    }, {\n        key: '_animateIn',\n        value: function _animateIn() {\n            var _this = this;\n\n            setTimeout(function () {\n                document.getElementById(_this.id).className += \" animated zoomInLoader\";\n                document.getElementById(_this.id).style.display = \"\";\n            }, 400);\n        }\n\n        /**\r\n         * Handle Animating Out Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: '_animateOut',\n        value: function _animateOut() {\n            document.getElementById(this.id).className += \" zoomOutLoader\";\n        }\n\n        /**\r\n         * Handle Closing and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: '_close',\n        value: function _close() {\n            var dispose = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            this._animateOut();\n            if (dispose) {\n                this.modalObj.close();\n                this._dispose();\n            }\n        }\n\n        /**\r\n         * Remove object reference from dom\r\n         * @private\r\n         */\n\n    }, {\n        key: '_dispose',\n        value: function _dispose() {\n\n            delete window.FlowUI['_loaders'][this.id];\n        }\n    }, {\n        key: 'close',\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: 'dispose',\n        get: function get() {\n            return this._dispose;\n        }\n    }]);\n\n    return Loader;\n}();\n\n},{\"../../modal/js/index.js\":4}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     * Modal Constructor\r\n     * @param props\r\n     * @param.id : Modal Id\r\n     * @param.parent : Parent element to inject modal into\r\n     * @param.className : Class names to append to modal\r\n     */\n    function Modal(props) {\n        _classCallCheck(this, Modal);\n\n        props = props || {};\n\n        this.id = props.id || \"modal-\" + new Date().getTime();\n        this.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n        this.className = props.className || \"\";\n        this.children = {}; // associative array of child elements using this modal\n\n        // Public Properties\n        this.type = \"modal\";\n        this.element = null;\n\n        window['FlowUI'] = window['FlowUI'] || {};\n\n        // Check if modal already exists, if so assign values from original\n        // and don't re-render or export instance\n        if (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\n            Object.assign(this, window['FlowUI']._modals[this.id]);\n            return;\n        }\n\n        this._render();\n        this._exportObjInstance();\n    }\n\n    _createClass(Modal, [{\n        key: '_exportObjInstance',\n\n\n        /**\r\n         * Save reference to instantiated modal to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._modals = window['FlowUI']._modals || {};\n            window['FlowUI']._modals[this.id] = this;\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: '_render',\n        value: function _render() {\n\n            this.parent.className += ' flowui-modal-parent';\n\n            var container = document.createElement(\"div\");\n            container.setAttribute(\"id\", this.id);\n            container.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n            this.parent.appendChild(container);\n\n            this.element = container;\n        }\n\n        /**\r\n         * Close Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: '_close',\n        value: function _close() {\n            var _this = this;\n\n            var modalElement = document.getElementById(this.id);\n            modalElement.className += \" fadeOut\";\n\n            setTimeout(function () {\n                modalElement.parentNode.removeChild(modalElement);\n                _this.parent.className = _this.parent.className.replace('flowui-modal-parent', '');\n            }, 1000);\n\n            this._dispose();\n        }\n\n        // Remove object references\n\n    }, {\n        key: '_dispose',\n        value: function _dispose() {\n\n            // Delete any child object references (UI elements using this modal obj)\n            for (var key in this.children) {\n                this.children[key].dispose();\n            }\n            delete window['FlowUI']._modals[this.id];\n        }\n    }, {\n        key: 'close',\n        get: function get() {\n            return this._close;\n        }\n    }]);\n\n    return Modal;\n}();\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\n// Dependencies\nvar Modal = require('./modal/js/index.js');\nvar Loader = require('./loader/js/index.js');\nvar Dialog = require('./dialog/js/index.js');\n\n// Export\nmodule.exports = {\n    Modal: Modal,\n    Loader: Loader,\n    Dialog: Dialog\n};\n\n},{\"./dialog/js/index.js\":2,\"./loader/js/index.js\":3,\"./modal/js/index.js\":4}]},{},[5])(5)\n});\n\n","\r\nmodule.exports = class Helpers {\r\n\r\n    /**\r\n     * Scroll to\r\n     * @param element\r\n     * @param to\r\n     * @param duration\r\n     */\r\n\r\n    static scrollTo(element, to, duration) {\r\n\r\n        let _this = this;\r\n\r\n        let start = element.scrollTop,\r\n            change = to - start,\r\n            increment = 20;\r\n\r\n        let animateScroll = (elapsedTime) => {\r\n            elapsedTime += increment;\r\n            let position = _this.easeInOut(elapsedTime, start, change, duration);\r\n            element.scrollTop = position;\r\n            if (elapsedTime < duration) {\r\n                setTimeout(() => {\r\n                    animateScroll(elapsedTime);\r\n                }, increment);\r\n            }\r\n        };\r\n\r\n        animateScroll(0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Easing Function for Scrolling\r\n     * @param currentTime\r\n     * @param start\r\n     * @param change\r\n     * @param duration\r\n     * @returns {*}\r\n     */\r\n    static easeInOut(currentTime, start, change, duration) {\r\n        currentTime /= duration / 2;\r\n        if (currentTime < 1) {\r\n            return change / 2 * currentTime * currentTime + start;\r\n        }\r\n        currentTime -= 1;\r\n        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;\r\n    }\r\n\r\n\r\n}\r\n\r\n","'use strict';\r\n\r\nconst Helpers = require('./helpers.js');\r\nconst Modal = require('../../modal/js/index.js');\r\nconst Loader = require('../../loader/js/index.js');\r\n\r\nmodule.exports = class Dialog {\r\n\r\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\r\n\r\n    constructor({id, title, html, url, promise, buttons, options = {}}) {\r\n\r\n        // Arguments\r\n        this.id = (id || \"dialog-\" + new Date().getTime());\r\n        this.title = title;\r\n        this.html = html;\r\n        this.url = url;\r\n        this.promise = promise;\r\n        this.buttons = buttons;\r\n\r\n        this.options = new DialogOptions(options);\r\n\r\n        // Public Properties\r\n        this.type = \"dialog\";\r\n        this.modalObj;\r\n        this.loaderObj;\r\n        this.dialogElement = null;\r\n        this.parent = document.body;\r\n\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n\r\n        this._renderDialog();\r\n        this._attachEvents();\r\n        this._registerEventListeners();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n\r\n    /**\r\n     * Save reference to instantiated dialog's to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\r\n        window['FlowUI']._dialogs[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _renderModal() {\r\n\r\n        // Check if modal already exists for parent\r\n        if (window['FlowUI']._modals) {\r\n            for (var key in window['FlowUI']._modals) {\r\n                let m = window['FlowUI']._modals[key];\r\n                if (m.parent == this.parent) {\r\n                    this.modalObj = window['FlowUI']._modals[m.id];\r\n                }\r\n            }\r\n        }\r\n\r\n        // If it doesn't exist, create new instance\r\n        if (!this.modalObj) {\r\n            this.modalObj = new Modal();\r\n        }\r\n\r\n        // If dialog content requires http request, show loader before rendering\r\n        if (this.url || this.promise) {\r\n            this.loaderObj = new Loader({\r\n                modalId: this.modalObj.id\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Dialog Content (Async)\r\n     * @private\r\n     */\r\n    _getContent() {\r\n\r\n        // If promise provided during instantiation, use promise object instead to get content\r\n        if (this.promise) {\r\n            return this.promise;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n                // Static content provided as property\r\n                if (this.html) {\r\n            resolve(this.html);\r\n        }\r\n\r\n        // Content from a partial or template retreived via http\r\n    else if (this.url) {\r\n\r\n            // Do the usual XHR stuff\r\n            var req = new XMLHttpRequest();\r\n            req.open('GET', this.url);\r\n\r\n            req.onload = function() {\r\n                if (req.status == 200) {\r\n                    // Resolve the promise with the response text\r\n                    resolve(req.response);\r\n                }\r\n                else {\r\n                    reject(Error(req.statusText));\r\n                }\r\n            };\r\n\r\n            req.onerror = function() {\r\n                reject(Error(\"Network Error\"));\r\n            };\r\n\r\n            req.send();\r\n\r\n        }\r\n    });\r\n\r\n    }\r\n\r\n    /**\r\n     * Render Dialog\r\n     * @private\r\n     */\r\n    _renderDialog() {\r\n\r\n        this._renderModal();\r\n        let contentPromise = this._getContent();\r\n\r\n        // Render Container\r\n        let container = document.createElement(\"div\");\r\n        container.setAttribute('id', this.id);\r\n        container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\r\n        //container.style.display = \"none\";\r\n\r\n        // Render Content Wrapper\r\n        let contentWrapper = document.createElement('div');\r\n        contentWrapper.setAttribute('class', 'content');\r\n        if (this.title) {\r\n            let title = document.createElement('div');\r\n            title.setAttribute('class', 'title');\r\n            title.innerHTML = this.title;\r\n            contentWrapper.appendChild(title);\r\n        }\r\n\r\n        // Render Inner Content\r\n        let content = document.createElement('div');\r\n        contentPromise.then((html) => {\r\n            content.innerHTML = html;\r\n    });\r\n        content.setAttribute('class', 'inner-content');\r\n        contentWrapper.appendChild(content);\r\n\r\n        // Render Close Button\r\n        let closeButtonElement = document.createElement('a');\r\n        closeButtonElement.onclick = this._close.bind(this);\r\n        closeButtonElement.className = \"close\";\r\n        contentWrapper.appendChild(closeButtonElement);\r\n\r\n        // Render Buttons\r\n        if (this.buttons && this.buttons.length > 0) {\r\n            let buttonsWrapper = document.createElement('div');\r\n            buttonsWrapper.setAttribute('class', 'buttons');\r\n            let x = 0;\r\n            this.buttons.forEach(function(button) {\r\n                let buttonElement = document.createElement(\"a\");\r\n                buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\r\n                buttonElement.innerHTML = button.title;\r\n                buttonElement.onclick = button.onclick;\r\n                buttonElement.href = button.href || 'javascript:;';\r\n                buttonsWrapper.appendChild(buttonElement);\r\n            });\r\n            contentWrapper.appendChild(buttonsWrapper);\r\n        }\r\n\r\n        container.appendChild(contentWrapper);\r\n\r\n        // Add to modal\r\n        this.modalObj.element.appendChild(container);\r\n\r\n        // Store dialog element to class property\r\n        this.dialogElement = container;\r\n\r\n        // Once content loaded, display\r\n        contentPromise.then(() => {\r\n\r\n            // Hide Loader\r\n            if (this.loaderObj) {\r\n            this.loaderObj.close(false);\r\n        }\r\n\r\n        this._bindScripts();\r\n        this._positionDialog();\r\n        this._focus();\r\n\r\n    });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Positions Dialog in center of viewport,\r\n     * scrolling page to top of Dialog if needed\r\n     * @private\r\n     */\r\n    _positionDialog() {\r\n\r\n        let dialogElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        const dialogHeight = dialogElement.offsetHeight;\r\n        const dialogWidth = dialogElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        let y = scrollPosition + (viewportHeight / 2) - (dialogHeight / 2);\r\n        y = y < 0 ? 30 : y;\r\n\r\n        dialogElement.style.top = y + 'px';\r\n\r\n        // If dialog heigh doesn't fit in viewport, scroll page to top of dialog\r\n        if (dialogHeight > viewportHeight) {\r\n            this._scrollToDialog();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Scroll Page to top of Dialog\r\n     * @private\r\n     */\r\n    _scrollToDialog() {\r\n\r\n        let yPosition = this.dialogElement.offsetTop - 30;\r\n        yPosition = yPosition < 0 ?  0 : yPosition;\r\n        Helpers.scrollTo(document.body, yPosition, 1000);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind Scripts\r\n     * Dialog content can contain scripts, which need to be added to dom in order to be made available\r\n     * @private\r\n     */\r\n    _bindScripts() {\r\n\r\n        const scripts = Array.from(this.dialogElement.getElementsByTagName('script'));\r\n        let externalScripts = [];\r\n        let embeddedScripts = [];\r\n\r\n        // Separate external script from embedded\r\n        scripts.forEach((script) => {\r\n            if (script.src == \"\") {\r\n            embeddedScripts.push(script);\r\n        }\r\n    else {\r\n            externalScripts.push(script.src);\r\n        }\r\n    });\r\n\r\n        // Helper function to load array of external scripts\r\n        let loadScripts = function(scriptsArray, onComplete) {\r\n\r\n            if (scriptsArray.length > 0) {\r\n                let newScript = document.createElement('script');\r\n                newScript.type = 'text/javascript';\r\n                newScript.src = scriptsArray[0];\r\n                document.documentElement.appendChild(newScript);\r\n\r\n                newScript.addEventListener (\"load\", function() {\r\n                    console.log('External script from content loaded:', scriptsArray[0]);\r\n                    scriptsArray.shift();\r\n                    loadScripts(scriptsArray, onComplete);\r\n\r\n                }, false);\r\n            }\r\n            else {\r\n                onComplete();\r\n            }\r\n        }\r\n\r\n        // First, load external scripts\r\n        loadScripts(externalScripts, function() {\r\n\r\n            // Once all external scripts loaded, add embedded scripts\r\n            embeddedScripts.forEach((script) => {\r\n                let newScript = document.createElement('script');\r\n            newScript.text = script.innerHTML;\r\n            document.documentElement.appendChild(newScript);\r\n            console.log('Embedded script from content added');\r\n        });\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing Dialog and removing from DOM\r\n     * @private\r\n     */\r\n    _close() {\r\n\r\n        if (this.options.events.onclose) {\r\n            this.options.events.onclose();\r\n        }\r\n        this._setState('closed');\r\n        this._dispose();\r\n\r\n        // Only close modal if there's no other dialogs using it\r\n        const modalHasChildDialogs = () =>\r\n        {\r\n            var childDialogs = [];\r\n            for (var key in this.modalObj.children) {\r\n                var flowObject = this.modalObj.children[key];\r\n                if (flowObject.type === 'dialog') {\r\n                    childDialogs.push(flowObject);\r\n                }\r\n            }\r\n            return childDialogs.length > 0;\r\n\r\n        }\r\n\r\n        if (!modalHasChildDialogs()) {\r\n            this.modalObj.close();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove instance from global window scope and check if another dialog\r\n     * should be made active\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        // TO DO: Element from Remove from DOM\r\n        setTimeout(()=> {\r\n            try {\r\n                this.dialogElement.parentNode.removeChild(this.dialogElement);\r\n    }\r\n    catch (ex) {\r\n            // modal obj already removed\r\n        }\r\n    }, 1000);\r\n\r\n        // Delete object reference from parent modal's children\r\n        for (var key in this.modalObj.children) {\r\n            var flowObj = this.modalObj.children[key];\r\n            if (flowObj.id == this.id) {\r\n                delete this.modalObj.children[this.id];\r\n            }\r\n        }\r\n\r\n        delete window['FlowUI']._dialogs[this.id];\r\n\r\n        this._reactivatePreviousDialog();\r\n    }\r\n\r\n    /**\r\n     * Reactives previous dialog (if any)\r\n     * @private\r\n     */\r\n    _reactivatePreviousDialog() {\r\n        let allDialogs = window['FlowUI']._dialogs;\r\n        let previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]]\r\n        if (previousDialog) {\r\n            setTimeout(() => {\r\n                previousDialog._focus();\r\n        }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Dialog State Change (focus, inactive, dismissed)\r\n     * @param e\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _onStateChange(e) {\r\n\r\n        // Strip out any additional classes added after\r\n        let sanitizeClasses = () => {\r\n            const classes = \"flowui-dialog animated \" + this.options.className;\r\n            return classes;\r\n        }\r\n\r\n        document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\r\n\r\n        switch (e.detail.status) {\r\n            case 'active':\r\n                document.getElementById(this.id).className =  sanitizeClasses() + ' ' + this.options.animation.in;\r\n                break;\r\n            case 'inactive':\r\n                // If dialog isn't stackable, instead of just inacivating - we ne to also dispose\r\n                if (!this.options.stackable) {\r\n                    document.getElementById(this.id).className =  sanitizeClasses() + ' inactive';\r\n                    this._dispose();\r\n                    break;\r\n                }\r\n                if (Object.keys(window['FlowUI']._dialogs).length > 1) {\r\n                    document.getElementById(this.id).className =  sanitizeClasses() + ' inactive';\r\n                    break;\r\n                }\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            case 'closed':\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            default:\r\n            // catch all\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Set Dialog State (active, inactive)\r\n     * @private\r\n     */\r\n    _setState(state) {\r\n\r\n        var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\r\n        this.dialogElement.dispatchEvent(event);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Sets active dialog, and inactivates others\r\n     * @private\r\n     */\r\n    _focus() {\r\n\r\n        let _this = this;\r\n        this._setState(\"active\");\r\n\r\n        let allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\r\n        for (var key in allDialogs) {\r\n            var dialog = allDialogs[key];\r\n            if (dialog.id != _this.id) {\r\n                dialog._setState(\"inactive\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Bind any necessary events\r\n     * @private\r\n     */\r\n    _attachEvents() {\r\n\r\n        // Allow user to hit escape to close window (unless overwritten by param)\r\n        if (this.options.escapable) {\r\n            window.addEventListener(\"keyup\", (event) => {\r\n                if (event.keyCode == 27) {\r\n                this._close();\r\n            }\r\n        }, false);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Register for any event listeners\r\n     * @private\r\n     */\r\n    _registerEventListeners() {\r\n\r\n        // Listen for dialog state change event\r\n        this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * Options to customize Dialog\r\n */\r\nclass DialogOptions {\r\n\r\n    constructor({className, stackable = false, escapable = true, animation = {}, events = {} }) {\r\n\r\n        this.className = className || '';\r\n        this.escapable = escapable;\r\n        this.stackable = stackable;\r\n        this.animation =  {\r\n            in: animation.in || 'pulseIn',\r\n            out: animation.out || 'pulseOut'\r\n        },\r\n            this.events = {\r\n                onopen: events.onopen || null,\r\n                onclose: events.onclose || null\r\n            }\r\n    }\r\n\r\n}\r\n\r\n","'use strict';\r\n\r\n// Dependencies\r\nconst Modal = require('../../modal/js/index.js');\r\n\r\n\r\nmodule.exports = class Loader {\r\n\r\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\r\n    constructor(props = {}) {\r\n\r\n        this.id = props.id || \"loader-\" + new Date().getTime();\r\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\r\n        this.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\r\n        this.modalObj;\r\n\r\n        this.type = \"loader\";\r\n\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n\r\n        this._render();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n    /**\r\n     * Save reference to instantiated modal to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._loaders = window['FlowUI']._loaders || {};\r\n        window['FlowUI']._loaders[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _render() {\r\n\r\n        this._renderModal();\r\n\r\n        // Check that element doesn't already exist\r\n        if (!document.getElementById(this.id)) {\r\n            let container = document.createElement(\"div\");\r\n            container.id = this.id;\r\n            container.className = \"flowui-loader\";\r\n\r\n            let loaderElement = document.createElement(\"div\");\r\n            loaderElement.className = \"spinner\";\r\n            container.appendChild(loaderElement);\r\n\r\n            document.getElementById(this.modalObj.id).appendChild(container);\r\n        }\r\n\r\n        this._centerVertically();\r\n        this._animateIn();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _renderModal() {\r\n        this.modalObj = new Modal({\r\n            id: this.modalId,\r\n            parent: this.parent\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Parent Element\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let loaderElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\r\n        const loaderHeight = loaderElement.offsetHeight;\r\n        const loaderWidth = loaderElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // Center vertically in parent container\r\n        let topLoaderDiv = (parentHeight / 2) - (loaderHeight / 2);\r\n\r\n        // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\r\n        if (parentHeight > viewportHeight) {\r\n            topLoaderDiv = (viewportHeight / 2) - (loaderHeight / 2);\r\n\r\n            // If user is scrolled down at all, we need to adjust to make sure loader\r\n            // is displayed within current viewport\r\n            if (scrollPosition > 0) {\r\n                topLoaderDiv += scrollPosition;\r\n            }\r\n        }\r\n\r\n        loaderElement.style.top = topLoaderDiv + \"px\";\r\n        loaderElement.style.left = 'calc(50% - ' + (loaderWidth/2)  + 'px)';\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles Animating Dialog In\r\n     * @private\r\n     */\r\n    _animateIn() {\r\n\r\n        setTimeout(() => {\r\n            document.getElementById(this.id).className += \" animated zoomInLoader\";\r\n        document.getElementById(this.id).style.display = \"\";\r\n    }, 400);\r\n\r\n    }\r\n\r\n    /**\r\n     * Handle Animating Out Dialog\r\n     * @private\r\n     */\r\n    _animateOut() {\r\n        document.getElementById(this.id).className += \" zoomOutLoader\";\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing and removing from DOM\r\n     * @private\r\n     */\r\n    _close(dispose = true) {\r\n        this._animateOut();\r\n        if (dispose) {\r\n            this.modalObj.close();\r\n            this._dispose();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Remove object reference from dom\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        delete window.FlowUI['_loaders'][this.id];\r\n\r\n    }\r\n\r\n\r\n\r\n}","'use strict';\r\n\r\nmodule.exports = class Modal {\r\n\r\n    /**\r\n     * Modal Constructor\r\n     * @param props\r\n     * @param.id : Modal Id\r\n     * @param.parent : Parent element to inject modal into\r\n     * @param.className : Class names to append to modal\r\n     */\r\n    constructor(props) {\r\n\r\n        props = props || {};\r\n\r\n        this.id = props.id || \"modal-\" + new Date().getTime();\r\n        this.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\r\n        this.className = props.className || \"\";\r\n        this.children = {}; // associative array of child elements using this modal\r\n\r\n        // Public Properties\r\n        this.type = \"modal\";\r\n        this.element = null;\r\n\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n\r\n        // Check if modal already exists, if so assign values from original\r\n        // and don't re-render or export instance\r\n        if (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\r\n            Object.assign(this, window['FlowUI']._modals[this.id]);\r\n            return;\r\n        }\r\n\r\n        this._render();\r\n        this._exportObjInstance();\r\n    }\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n\r\n    /**\r\n     * Save reference to instantiated modal to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._modals = window['FlowUI']._modals || {};\r\n        window['FlowUI']._modals[this.id] = this;\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _render() {\r\n\r\n        this.parent.className += ' flowui-modal-parent';\r\n\r\n        const container = document.createElement(\"div\");\r\n        container.setAttribute(\"id\", this.id);\r\n        container.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\r\n        this.parent.appendChild(container);\r\n\r\n        this.element = container;\r\n\r\n    }\r\n\r\n    /**\r\n     * Close Modal\r\n     * @private\r\n     */\r\n    _close() {\r\n\r\n        let modalElement = document.getElementById(this.id);\r\n        modalElement.className += \" fadeOut\";\r\n\r\n        setTimeout(() => {\r\n            modalElement.parentNode.removeChild(modalElement);\r\n        this.parent.className = this.parent.className.replace('flowui-modal-parent', '');\r\n    }, 1000);\r\n\r\n        this._dispose();\r\n    }\r\n\r\n    // Remove object references\r\n    _dispose() {\r\n\r\n        // Delete any child object references (UI elements using this modal obj)\r\n        for (var key in this.children) {\r\n            this.children[key].dispose();\r\n        }\r\n        delete window['FlowUI']._modals[this.id];\r\n\r\n    }\r\n\r\n}\r\n\r\n","// Dependencies\r\nconst Modal = require('./modal/js/index.js');\r\nconst Loader = require('./loader/js/index.js');\r\nconst Dialog = require('./dialog/js/index.js');\r\n\r\n\r\n// Export\r\nmodule.exports = {\r\n    Modal: Modal,\r\n    Loader: Loader,\r\n    Dialog: Dialog\r\n}"]}