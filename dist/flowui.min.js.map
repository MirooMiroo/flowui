{"version":3,"sources":["src/node_modules/browser-pack/_prelude.js","src/src/dialog/js/dialog.js","flowui.js","src/src/dialog/js/helpers.js","src/src/index.js","src/src/loader/js/loader.js","src/src/modal/js/modal.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","FlowUI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Helpers","Dialog","_ref","id","title","html","url","promise","buttons","_ref$options","options","undefined","Date","getTime","DialogOptions","type","modalObj","loaderObj","dialogElement","parent","document","body","_renderDialog","_attachEvents","_registerEventListeners","_exportObjInstance","value","_dialogs","children","_modals","m","Modal","Loader","modalId","_this2","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","_this3","_renderModal","contentPromise","_getContent","container","createElement","setAttribute","className","contentWrapper","innerHTML","appendChild","content","then","closeButtonElement","onclick","_close","bind","buttonsWrapper","x","forEach","button","buttonElement","href","element","close","_bindScripts","_positionDialog","_focus","getElementById","viewportHeight","Math","max","documentElement","clientHeight","innerHeight","dialogHeight","clientWidth","innerWidth","offsetHeight","scrollPosition","offsetWidth","scrollY","y","style","top","_scrollToDialog","yPosition","offsetTop","scrollTo","scripts","Array","from","getElementsByTagName","externalScripts","embeddedScripts","script","src","push","loadScripts","scriptsArray","onComplete","newScript","addEventListener","console","log","shift","text","_this4","events","onclose","_setState","_dispose","modalHasChildDialogs","childDialogs","flowObject","_this5","setTimeout","parentNode","removeChild","ex","flowObj","_reactivatePreviousDiaog","allDialogs","previousDialog","keys","_this6","sanitizeClasses","classes","detail","animation","out","state","event","CustomEvent","dispatchEvent","_this","dialog","_this7","escapable","keyCode","_onStateChange","get","_ref2","_ref2$escapable","_ref2$animation","_ref2$events","in","onopen","./helpers.js","2","to","duration","start","scrollTop","change","increment","animateScroll","elapsedTime","position","easeInOut","currentTime","3","./dialog/js/dialog.js","./loader/js/loader.js","./modal/js/modal.js","4","_typeof","Symbol","iterator","obj","constructor","arguments","querySelector","_render","_loaders","loaderElement","_centerVertically","_animateIn","parentHeight","loaderHeight","loaderWidth","topLoaderDiv","left","display","dispose","_animateOut","5","assign","modalElement","replace"],"mappings":"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","file":"flowui.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nconst Helpers = require('./helpers.js');\r\n\r\nmodule.exports = class Dialog {\r\n\r\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\r\n\r\n    constructor({id, title, html, url, promise, buttons, options = {}}) {\r\n\r\n        // Arguments\r\n        this.id = (id || \"dialog-\" + new Date().getTime());\r\n        this.title = title;\r\n        this.html = html;\r\n        this.url = url;\r\n        this.promise = promise;\r\n        this.buttons = buttons;\r\n\r\n        this.options = new DialogOptions(options);\r\n\r\n        // Public Properties\r\n        this.type = \"dialog\";\r\n        this.modalObj;\r\n        this.loaderObj;\r\n        this.dialogElement = null;\r\n        this.parent = document.body;\r\n\r\n\r\n        this._renderDialog();\r\n        this._attachEvents();\r\n        this._registerEventListeners();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n\r\n    /**\r\n     * Save reference to instantiated dialog's to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\r\n        window['FlowUI']._dialogs[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n     _renderModal() {\r\n\r\n        // Check if modal already exists for parent\r\n        if (window['FlowUI']._modals) {\r\n            for (var key in window['FlowUI']._modals) {\r\n                let m = window['FlowUI']._modals[key];\r\n                if (m.parent == this.parent) {\r\n                    this.modalObj = window['FlowUI']._modals[m.id];\r\n                }\r\n            }\r\n        }\r\n\r\n        // If it doesn't exist, create new instance\r\n        if (!this.modalObj) {\r\n            this.modalObj = new window['FlowUI'].Modal();\r\n        }\r\n\r\n        // If dialog content requires http request, show loader before rendering\r\n        if (this.url || this.promise) {\r\n            this.loaderObj = new window['FlowUI'].Loader({\r\n                modalId: this.modalObj.id\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Dialog Content (Async)\r\n     * @private\r\n     */\r\n    _getContent() {\r\n\r\n        // If promise provided during instantiation, use promise object instead to get content\r\n        if (this.promise) {\r\n            return this.promise;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // Static content provided as property\r\n            if (this.html) {\r\n                resolve(this.html);\r\n            }\r\n\r\n            // Content from a partial or template retreived via http\r\n            else if (this.url) {\r\n\r\n                // Do the usual XHR stuff\r\n                var req = new XMLHttpRequest();\r\n                req.open('GET', this.url);\r\n\r\n                req.onload = function() {\r\n                    if (req.status == 200) {\r\n                        // Resolve the promise with the response text\r\n                        resolve(req.response);\r\n                    }\r\n                    else {\r\n                        reject(Error(req.statusText));\r\n                    }\r\n                };\r\n\r\n                req.onerror = function() {\r\n                    reject(Error(\"Network Error\"));\r\n                };\r\n\r\n                req.send();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Render Dialog\r\n     * @private\r\n     */\r\n    _renderDialog() {\r\n\r\n        this._renderModal();\r\n        let contentPromise = this._getContent();\r\n\r\n        // Render Container\r\n        let container = document.createElement(\"div\");\r\n        container.setAttribute('id', this.id);\r\n        container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\r\n        //container.style.display = \"none\";\r\n\r\n        // Render Content Wrapper\r\n        let contentWrapper = document.createElement('div');\r\n        contentWrapper.setAttribute('class', 'content');\r\n        if (this.title) {\r\n            let title = document.createElement('div');\r\n            title.setAttribute('class', 'title');\r\n            title.innerHTML = this.title;\r\n            contentWrapper.appendChild(title);\r\n        }\r\n\r\n        // Render Inner Content\r\n        let content = document.createElement('div');\r\n        contentPromise.then((html) => {\r\n            content.innerHTML = html;\r\n        });\r\n        content.setAttribute('class', 'inner-content');\r\n        contentWrapper.appendChild(content);\r\n\r\n        // Render Close Button\r\n        let closeButtonElement = document.createElement('a');\r\n        closeButtonElement.onclick = this._close.bind(this);\r\n        closeButtonElement.className = \"close\";\r\n        contentWrapper.appendChild(closeButtonElement);\r\n\r\n        // Render Buttons\r\n        if (this.buttons && this.buttons.length > 0) {\r\n            let buttonsWrapper = document.createElement('div');\r\n            buttonsWrapper.setAttribute('class', 'buttons');\r\n            let x = 0;\r\n            this.buttons.forEach(function(button) {\r\n                let buttonElement = document.createElement(\"a\");\r\n                buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\r\n                buttonElement.innerHTML = button.title;\r\n                buttonElement.onclick = button.onclick;\r\n                buttonElement.href = button.href || 'javascript:;';\r\n                buttonsWrapper.appendChild(buttonElement);\r\n            });\r\n            contentWrapper.appendChild(buttonsWrapper);\r\n        }\r\n\r\n        container.appendChild(contentWrapper);\r\n\r\n        // Add to modal\r\n        this.modalObj.element.appendChild(container);\r\n        /*let modalElement = document.getElementById(this.modalObj.id);\r\n        modalElement.appendChild(container);*/\r\n\r\n        // Store dialog element to class property\r\n        this.dialogElement = container;\r\n\r\n        // Once content loaded, display\r\n        contentPromise.then(() => {\r\n\r\n            // Hide Loader\r\n            if (this.loaderObj) {\r\n                this.loaderObj.close(false);\r\n            }\r\n\r\n            this._bindScripts();\r\n            this._positionDialog();\r\n            this._focus();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Positions Dialog in center of viewport,\r\n     * scrolling page to top of Dialog if needed\r\n     * @private\r\n     */\r\n    _positionDialog() {\r\n\r\n        let dialogElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        const dialogHeight = dialogElement.offsetHeight;\r\n        const dialogWidth = dialogElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        let y = scrollPosition + (viewportHeight / 2) - (dialogHeight / 2);\r\n        y = y < 0 ? 30 : y;\r\n\r\n        dialogElement.style.top = y + 'px';\r\n\r\n        // If dialog heigh doesn't fit in viewport, scroll page to top of dialog\r\n        if (dialogHeight > viewportHeight) {\r\n            this._scrollToDialog();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Scroll Page to top of Dialog\r\n     * @private\r\n     */\r\n    _scrollToDialog() {\r\n\r\n        let yPosition = this.dialogElement.offsetTop - 30;\r\n        yPosition = yPosition < 0 ?  0 : yPosition;\r\n        Helpers.scrollTo(document.body, yPosition, 1000);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Bind Scripts\r\n     * Dialog content can contain scripts, which need to be added to dom in order to be made available\r\n     * @private\r\n     */\r\n    _bindScripts() {\r\n\r\n        const scripts = Array.from(this.dialogElement.getElementsByTagName('script'));\r\n        let externalScripts = [];\r\n        let embeddedScripts = [];\r\n\r\n        // Separate external script from embedded\r\n        scripts.forEach((script) => {\r\n            if (script.src == \"\") {\r\n                embeddedScripts.push(script);\r\n            }\r\n            else {\r\n                externalScripts.push(script.src);\r\n            }\r\n        });\r\n\r\n        // Helper function to load array of external scripts\r\n        let loadScripts = function(scriptsArray, onComplete) {\r\n\r\n            if (scriptsArray.length > 0) {\r\n                let newScript = document.createElement('script');\r\n                newScript.type = 'text/javascript';\r\n                newScript.src = scriptsArray[0];\r\n                document.documentElement.appendChild(newScript);\r\n\r\n                newScript.addEventListener (\"load\", function() {\r\n                    console.log('External script from content loaded:', scriptsArray[0]);\r\n                    scriptsArray.shift();\r\n                    loadScripts(scriptsArray, onComplete);\r\n\r\n                }, false);\r\n            }\r\n            else {\r\n                onComplete();\r\n            }\r\n        }\r\n\r\n        // First, load external scripts\r\n        loadScripts(externalScripts, function() {\r\n\r\n            // Once all external scripts loaded, add embedded scripts\r\n            embeddedScripts.forEach((script) => {\r\n                let newScript = document.createElement('script');\r\n                newScript.text = script.innerHTML;\r\n                document.documentElement.appendChild(newScript);\r\n                console.log('Embedded script from content added');\r\n            });\r\n\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing Dialog and removing from DOM\r\n     * @private\r\n     */\r\n    _close() {\r\n\r\n        if (this.options.events.onclose) {\r\n            this.options.events.onclose();\r\n        }\r\n        this._setState('closed');\r\n        this._dispose();\r\n\r\n        // Only close modal if there's no other dialogs using it\r\n        const modalHasChildDialogs = () =>\r\n        {\r\n            var childDialogs = [];\r\n            for (var key in this.modalObj.children) {\r\n                var flowObject = this.modalObj.children[key];\r\n                if (flowObject.type === 'dialog') {\r\n                    childDialogs.push(flowObject);\r\n                }\r\n            }\r\n            return childDialogs.length > 0;\r\n\r\n        }\r\n\r\n        if (!modalHasChildDialogs()) {\r\n            this.modalObj.close();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove instance from global window scope and check if another dialog\r\n     * should be made active\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        // TO DO: Element from Remove from DOM\r\n        setTimeout(()=> {\r\n            try {\r\n                this.dialogElement.parentNode.removeChild(this.dialogElement);\r\n            }\r\n            catch (ex) {\r\n                // modal obj already removed\r\n            }\r\n        }, 1000);\r\n\r\n        // Delete object reference from parent modal's children\r\n        for (var key in this.modalObj.children) {\r\n            var flowObj = this.modalObj.children[key];\r\n            if (flowObj.id == this.id) {\r\n                delete this.modalObj.children[this.id];\r\n            }\r\n        }\r\n\r\n        delete window['FlowUI']._dialogs[this.id];\r\n\r\n        this._reactivatePreviousDiaog();\r\n    }\r\n\r\n    /**\r\n     * Reactives previous dialog (if any)\r\n     * @private\r\n     */\r\n    _reactivatePreviousDiaog() {\r\n        let allDialogs = window['FlowUI']._dialogs;\r\n        let previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]]\r\n        if (previousDialog) {\r\n            setTimeout(() => {\r\n                previousDialog._focus();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Dialog State Change (focus, inactive, dismissed)\r\n     * @param e\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _onStateChange(e) {\r\n\r\n        // Strip out any additional classes added after\r\n        let sanitizeClasses = () => {\r\n            const classes = \"flowui-dialog animated \" + this.options.className;\r\n            return classes;\r\n        }\r\n\r\n        document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\r\n\r\n        switch (e.detail.status) {\r\n            case 'active':\r\n                document.getElementById(this.id).className =  sanitizeClasses() + ' ' + this.options.animation.in;\r\n                break;\r\n            case 'inactive':\r\n                if (Object.keys(window['FlowUI']._dialogs).length > 1) {\r\n                    document.getElementById(this.id).className =  sanitizeClasses() + ' inactive';\r\n                    break;\r\n                }\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            case 'closed':\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            default:\r\n                // catch all\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Set Dialog State (active, inactive)\r\n     * @private\r\n     */\r\n    _setState(state) {\r\n\r\n        var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\r\n        this.dialogElement.dispatchEvent(event);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Sets active dialog, and inactivates others\r\n     * @private\r\n     */\r\n    _focus() {\r\n\r\n        let _this = this;\r\n        this._setState(\"active\");\r\n\r\n        let allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\r\n        for (var key in allDialogs) {\r\n            var dialog = allDialogs[key];\r\n            if (dialog.id != _this.id) {\r\n                dialog._setState(\"inactive\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind any necessary events\r\n     * @private\r\n     */\r\n    _attachEvents() {\r\n\r\n        // Allow user to hit escape to close window (unless overwritten by param)\r\n        if (this.options.escapable) {\r\n            window.addEventListener(\"keyup\", (event) => {\r\n                if (event.keyCode == 27) {\r\n                    this._close();\r\n                }\r\n            }, false);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Register for any event listeners\r\n     * @private\r\n     */\r\n    _registerEventListeners() {\r\n\r\n        // Listen for dialog state change event\r\n        this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * Options to customize Dialog\r\n */\r\nclass DialogOptions {\r\n\r\n    constructor({className, escapable = true, animation = {}, events = {} }) {\r\n\r\n            this.className = className || '';\r\n            this.escapable = escapable;\r\n            this.animation =  {\r\n                in: animation.in || 'pulseIn',\r\n                out: animation.out || 'pulseOut'\r\n            },\r\n            this.events = {\r\n                onopen: events.onopen || null,\r\n                onclose: events.onclose || null\r\n            }\r\n    }\r\n\r\n}\r\n\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.FlowUI = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Helpers = require('./helpers.js');\n\nmodule.exports = function () {\n\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\n\n    function Dialog(_ref) {\n        var id = _ref.id;\n        var title = _ref.title;\n        var html = _ref.html;\n        var url = _ref.url;\n        var promise = _ref.promise;\n        var buttons = _ref.buttons;\n        var _ref$options = _ref.options;\n        var options = _ref$options === undefined ? {} : _ref$options;\n\n        _classCallCheck(this, Dialog);\n\n        // Arguments\n        this.id = id || \"dialog-\" + new Date().getTime();\n        this.title = title;\n        this.html = html;\n        this.url = url;\n        this.promise = promise;\n        this.buttons = buttons;\n\n        this.options = new DialogOptions(options);\n\n        // Public Properties\n        this.type = \"dialog\";\n        this.modalObj;\n        this.loaderObj;\n        this.dialogElement = null;\n        this.parent = document.body;\n\n        this._renderDialog();\n        this._attachEvents();\n        this._registerEventListeners();\n        this._exportObjInstance();\n    }\n\n    _createClass(Dialog, [{\n        key: '_exportObjInstance',\n\n\n        /**\r\n         * Save reference to instantiated dialog's to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\n            window['FlowUI']._dialogs[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: '_renderModal',\n        value: function _renderModal() {\n\n            // Check if modal already exists for parent\n            if (window['FlowUI']._modals) {\n                for (var key in window['FlowUI']._modals) {\n                    var m = window['FlowUI']._modals[key];\n                    if (m.parent == this.parent) {\n                        this.modalObj = window['FlowUI']._modals[m.id];\n                    }\n                }\n            }\n\n            // If it doesn't exist, create new instance\n            if (!this.modalObj) {\n                this.modalObj = new window['FlowUI'].Modal();\n            }\n\n            // If dialog content requires http request, show loader before rendering\n            if (this.url || this.promise) {\n                this.loaderObj = new window['FlowUI'].Loader({\n                    modalId: this.modalObj.id\n                });\n            }\n        }\n\n        /**\r\n         * Get Dialog Content (Async)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_getContent',\n        value: function _getContent() {\n            var _this2 = this;\n\n            // If promise provided during instantiation, use promise object instead to get content\n            if (this.promise) {\n                return this.promise;\n            }\n\n            return new Promise(function (resolve, reject) {\n\n                // Static content provided as property\n                if (_this2.html) {\n                    resolve(_this2.html);\n                }\n\n                // Content from a partial or template retreived via http\n                else if (_this2.url) {\n\n                        // Do the usual XHR stuff\n                        var req = new XMLHttpRequest();\n                        req.open('GET', _this2.url);\n\n                        req.onload = function () {\n                            if (req.status == 200) {\n                                // Resolve the promise with the response text\n                                resolve(req.response);\n                            } else {\n                                reject(Error(req.statusText));\n                            }\n                        };\n\n                        req.onerror = function () {\n                            reject(Error(\"Network Error\"));\n                        };\n\n                        req.send();\n                    }\n            });\n        }\n\n        /**\r\n         * Render Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: '_renderDialog',\n        value: function _renderDialog() {\n            var _this3 = this;\n\n            this._renderModal();\n            var contentPromise = this._getContent();\n\n            // Render Container\n            var container = document.createElement(\"div\");\n            container.setAttribute('id', this.id);\n            container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\n            //container.style.display = \"none\";\n\n            // Render Content Wrapper\n            var contentWrapper = document.createElement('div');\n            contentWrapper.setAttribute('class', 'content');\n            if (this.title) {\n                var title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = this.title;\n                contentWrapper.appendChild(title);\n            }\n\n            // Render Inner Content\n            var content = document.createElement('div');\n            contentPromise.then(function (html) {\n                content.innerHTML = html;\n            });\n            content.setAttribute('class', 'inner-content');\n            contentWrapper.appendChild(content);\n\n            // Render Close Button\n            var closeButtonElement = document.createElement('a');\n            closeButtonElement.onclick = this._close.bind(this);\n            closeButtonElement.className = \"close\";\n            contentWrapper.appendChild(closeButtonElement);\n\n            // Render Buttons\n            if (this.buttons && this.buttons.length > 0) {\n                (function () {\n                    var buttonsWrapper = document.createElement('div');\n                    buttonsWrapper.setAttribute('class', 'buttons');\n                    var x = 0;\n                    _this3.buttons.forEach(function (button) {\n                        var buttonElement = document.createElement(\"a\");\n                        buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\n                        buttonElement.innerHTML = button.title;\n                        buttonElement.onclick = button.onclick;\n                        buttonElement.href = button.href || 'javascript:;';\n                        buttonsWrapper.appendChild(buttonElement);\n                    });\n                    contentWrapper.appendChild(buttonsWrapper);\n                })();\n            }\n\n            container.appendChild(contentWrapper);\n\n            // Add to modal\n            this.modalObj.element.appendChild(container);\n            /*let modalElement = document.getElementById(this.modalObj.id);\r\n            modalElement.appendChild(container);*/\n\n            // Store dialog element to class property\n            this.dialogElement = container;\n\n            // Once content loaded, display\n            contentPromise.then(function () {\n\n                // Hide Loader\n                if (_this3.loaderObj) {\n                    _this3.loaderObj.close(false);\n                }\n\n                _this3._bindScripts();\n                _this3._positionDialog();\n                _this3._focus();\n            });\n        }\n\n        /**\r\n         * Positions Dialog in center of viewport,\r\n         * scrolling page to top of Dialog if needed\r\n         * @private\r\n         */\n\n    }, {\n        key: '_positionDialog',\n        value: function _positionDialog() {\n\n            var dialogElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            var dialogHeight = dialogElement.offsetHeight;\n            var dialogWidth = dialogElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            var y = scrollPosition + viewportHeight / 2 - dialogHeight / 2;\n            y = y < 0 ? 30 : y;\n\n            dialogElement.style.top = y + 'px';\n\n            // If dialog heigh doesn't fit in viewport, scroll page to top of dialog\n            if (dialogHeight > viewportHeight) {\n                this._scrollToDialog();\n            }\n        }\n\n        /**\r\n         * Scroll Page to top of Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: '_scrollToDialog',\n        value: function _scrollToDialog() {\n\n            var yPosition = this.dialogElement.offsetTop - 30;\n            yPosition = yPosition < 0 ? 0 : yPosition;\n            Helpers.scrollTo(document.body, yPosition, 1000);\n        }\n\n        /**\r\n         * Bind Scripts\r\n         * Dialog content can contain scripts, which need to be added to dom in order to be made available\r\n         * @private\r\n         */\n\n    }, {\n        key: '_bindScripts',\n        value: function _bindScripts() {\n\n            var scripts = Array.from(this.dialogElement.getElementsByTagName('script'));\n            var externalScripts = [];\n            var embeddedScripts = [];\n\n            // Separate external script from embedded\n            scripts.forEach(function (script) {\n                if (script.src == \"\") {\n                    embeddedScripts.push(script);\n                } else {\n                    externalScripts.push(script.src);\n                }\n            });\n\n            // Helper function to load array of external scripts\n            var loadScripts = function loadScripts(scriptsArray, onComplete) {\n\n                if (scriptsArray.length > 0) {\n                    var newScript = document.createElement('script');\n                    newScript.type = 'text/javascript';\n                    newScript.src = scriptsArray[0];\n                    document.documentElement.appendChild(newScript);\n\n                    newScript.addEventListener(\"load\", function () {\n                        console.log('External script from content loaded:', scriptsArray[0]);\n                        scriptsArray.shift();\n                        loadScripts(scriptsArray, onComplete);\n                    }, false);\n                } else {\n                    onComplete();\n                }\n            };\n\n            // First, load external scripts\n            loadScripts(externalScripts, function () {\n\n                // Once all external scripts loaded, add embedded scripts\n                embeddedScripts.forEach(function (script) {\n                    var newScript = document.createElement('script');\n                    newScript.text = script.innerHTML;\n                    document.documentElement.appendChild(newScript);\n                    console.log('Embedded script from content added');\n                });\n            });\n        }\n\n        /**\r\n         * Handle Closing Dialog and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: '_close',\n        value: function _close() {\n            var _this4 = this;\n\n            if (this.options.events.onclose) {\n                this.options.events.onclose();\n            }\n            this._setState('closed');\n            this._dispose();\n\n            // Only close modal if there's no other dialogs using it\n            var modalHasChildDialogs = function modalHasChildDialogs() {\n                var childDialogs = [];\n                for (var key in _this4.modalObj.children) {\n                    var flowObject = _this4.modalObj.children[key];\n                    if (flowObject.type === 'dialog') {\n                        childDialogs.push(flowObject);\n                    }\n                }\n                return childDialogs.length > 0;\n            };\n\n            if (!modalHasChildDialogs()) {\n                this.modalObj.close();\n            }\n        }\n\n        /**\r\n         * Remove instance from global window scope and check if another dialog\r\n         * should be made active\r\n         * @private\r\n         */\n\n    }, {\n        key: '_dispose',\n        value: function _dispose() {\n            var _this5 = this;\n\n            // TO DO: Element from Remove from DOM\n            setTimeout(function () {\n                try {\n                    _this5.dialogElement.parentNode.removeChild(_this5.dialogElement);\n                } catch (ex) {\n                    // modal obj already removed\n                }\n            }, 1000);\n\n            // Delete object reference from parent modal's children\n            for (var key in this.modalObj.children) {\n                var flowObj = this.modalObj.children[key];\n                if (flowObj.id == this.id) {\n                    delete this.modalObj.children[this.id];\n                }\n            }\n\n            delete window['FlowUI']._dialogs[this.id];\n\n            this._reactivatePreviousDiaog();\n        }\n\n        /**\r\n         * Reactives previous dialog (if any)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_reactivatePreviousDiaog',\n        value: function _reactivatePreviousDiaog() {\n            var allDialogs = window['FlowUI']._dialogs;\n            var previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]];\n            if (previousDialog) {\n                setTimeout(function () {\n                    previousDialog._focus();\n                }, 500);\n            }\n        }\n\n        /**\r\n         * Handle Dialog State Change (focus, inactive, dismissed)\r\n         * @param e\r\n         * @returns {string}\r\n         * @private\r\n         */\n\n    }, {\n        key: '_onStateChange',\n        value: function _onStateChange(e) {\n            var _this6 = this;\n\n            // Strip out any additional classes added after\n            var sanitizeClasses = function sanitizeClasses() {\n                var classes = \"flowui-dialog animated \" + _this6.options.className;\n                return classes;\n            };\n\n            document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\n\n            switch (e.detail.status) {\n                case 'active':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.in;\n                    break;\n                case 'inactive':\n                    if (Object.keys(window['FlowUI']._dialogs).length > 1) {\n                        document.getElementById(this.id).className = sanitizeClasses() + ' inactive';\n                        break;\n                    }\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                case 'closed':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                default:\n                // catch all\n            }\n        }\n\n        /**\r\n         * Set Dialog State (active, inactive)\r\n         * @private\r\n         */\n\n    }, {\n        key: '_setState',\n        value: function _setState(state) {\n\n            var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\n            this.dialogElement.dispatchEvent(event);\n        }\n\n        /**\r\n         * Sets active dialog, and inactivates others\r\n         * @private\r\n         */\n\n    }, {\n        key: '_focus',\n        value: function _focus() {\n\n            var _this = this;\n            this._setState(\"active\");\n\n            var allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\n            for (var key in allDialogs) {\n                var dialog = allDialogs[key];\n                if (dialog.id != _this.id) {\n                    dialog._setState(\"inactive\");\n                }\n            }\n        }\n\n        /**\r\n         * Bind any necessary events\r\n         * @private\r\n         */\n\n    }, {\n        key: '_attachEvents',\n        value: function _attachEvents() {\n            var _this7 = this;\n\n            // Allow user to hit escape to close window (unless overwritten by param)\n            if (this.options.escapable) {\n                window.addEventListener(\"keyup\", function (event) {\n                    if (event.keyCode == 27) {\n                        _this7._close();\n                    }\n                }, false);\n            }\n        }\n\n        /**\r\n         * Register for any event listeners\r\n         * @private\r\n         */\n\n    }, {\n        key: '_registerEventListeners',\n        value: function _registerEventListeners() {\n\n            // Listen for dialog state change event\n            this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\n        }\n    }, {\n        key: 'close',\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: 'dispose',\n        get: function get() {\n            return this._dispose;\n        }\n    }]);\n\n    return Dialog;\n}();\n\n/**\r\n * Options to customize Dialog\r\n */\n\nvar DialogOptions = function DialogOptions(_ref2) {\n    var className = _ref2.className;\n    var _ref2$escapable = _ref2.escapable;\n    var escapable = _ref2$escapable === undefined ? true : _ref2$escapable;\n    var _ref2$animation = _ref2.animation;\n    var animation = _ref2$animation === undefined ? {} : _ref2$animation;\n    var _ref2$events = _ref2.events;\n    var events = _ref2$events === undefined ? {} : _ref2$events;\n\n    _classCallCheck(this, DialogOptions);\n\n    this.className = className || '';\n    this.escapable = escapable;\n    this.animation = {\n        in: animation.in || 'pulseIn',\n        out: animation.out || 'pulseOut'\n    }, this.events = {\n        onopen: events.onopen || null,\n        onclose: events.onclose || null\n    };\n};\n\n},{\"./helpers.js\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n    function Helpers() {\n        _classCallCheck(this, Helpers);\n    }\n\n    _createClass(Helpers, null, [{\n        key: \"scrollTo\",\n\n\n        /**\r\n         * Scroll to\r\n         * @param element\r\n         * @param to\r\n         * @param duration\r\n         */\n\n        value: function scrollTo(element, to, duration) {\n\n            var _this = this;\n\n            var start = element.scrollTop,\n                change = to - start,\n                increment = 20;\n\n            var animateScroll = function animateScroll(elapsedTime) {\n                elapsedTime += increment;\n                var position = _this.easeInOut(elapsedTime, start, change, duration);\n                element.scrollTop = position;\n                if (elapsedTime < duration) {\n                    setTimeout(function () {\n                        animateScroll(elapsedTime);\n                    }, increment);\n                }\n            };\n\n            animateScroll(0);\n        }\n\n        /**\r\n         * Easing Function for Scrolling\r\n         * @param currentTime\r\n         * @param start\r\n         * @param change\r\n         * @param duration\r\n         * @returns {*}\r\n         */\n\n    }, {\n        key: \"easeInOut\",\n        value: function easeInOut(currentTime, start, change, duration) {\n            currentTime /= duration / 2;\n            if (currentTime < 1) {\n                return change / 2 * currentTime * currentTime + start;\n            }\n            currentTime -= 1;\n            return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;\n        }\n    }]);\n\n    return Helpers;\n}();\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\n// Dependencies\nvar Modal = require('./modal/js/modal.js');\nvar Loader = require('./loader/js/loader.js');\nvar Dialog = require('./dialog/js/dialog.js');\n\n// Export\nmodule.exports = {\n    Modal: Modal,\n    Loader: Loader,\n    Dialog: Dialog\n};\n\n},{\"./dialog/js/dialog.js\":1,\"./loader/js/loader.js\":4,\"./modal/js/modal.js\":5}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\n    function Loader() {\n        var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        _classCallCheck(this, Loader);\n\n        this.id = props.id || \"loader-\" + new Date().getTime();\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\n        this.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n        this.modalObj;\n\n        this.type = \"loader\";\n\n        this._render();\n        this._exportObjInstance();\n    }\n\n    _createClass(Loader, [{\n        key: \"_exportObjInstance\",\n\n\n        /**\r\n         * Save reference to instantiated modal to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._loaders = window['FlowUI']._loaders || {};\n            window['FlowUI']._loaders[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         *\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_render\",\n        value: function _render() {\n\n            this._renderModal();\n\n            // Check that element doesn't already exist\n            if (!document.getElementById(this.id)) {\n                var container = document.createElement(\"div\");\n                container.id = this.id;\n                container.className = \"flowui-loader\";\n\n                var loaderElement = document.createElement(\"div\");\n                loaderElement.className = \"spinner\";\n                container.appendChild(loaderElement);\n\n                document.getElementById(this.modalObj.id).appendChild(container);\n            }\n\n            this._centerVertically();\n            this._animateIn();\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderModal\",\n        value: function _renderModal() {\n            this.modalObj = new window['FlowUI'].Modal({\n                id: this.modalId,\n                parent: this.parent\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Parent Element\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_centerVertically\",\n        value: function _centerVertically() {\n\n            var loaderElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\n            var loaderHeight = loaderElement.offsetHeight;\n            var loaderWidth = loaderElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // Center vertically in parent container\n            var topLoaderDiv = parentHeight / 2 - loaderHeight / 2;\n\n            // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\n            if (parentHeight > viewportHeight) {\n                topLoaderDiv = viewportHeight / 2 - loaderHeight / 2;\n\n                // If user is scrolled down at all, we need to adjust to make sure loader\n                // is displayed within current viewport\n                if (scrollPosition > 0) {\n                    topLoaderDiv += scrollPosition;\n                }\n            }\n\n            loaderElement.style.top = topLoaderDiv + \"px\";\n            loaderElement.style.left = 'calc(50% - ' + loaderWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handles Animating Dialog In\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateIn\",\n        value: function _animateIn() {\n            var _this = this;\n\n            setTimeout(function () {\n                document.getElementById(_this.id).className += \" animated zoomInLoader\";\n                document.getElementById(_this.id).style.display = \"\";\n            }, 400);\n        }\n\n        /**\r\n         * Handle Animating Out Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateOut\",\n        value: function _animateOut() {\n            document.getElementById(this.id).className += \" zoomOutLoader\";\n        }\n\n        /**\r\n         * Handle Closing and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_close\",\n        value: function _close() {\n            var dispose = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n            this._animateOut();\n            if (dispose) {\n                this.modalObj.close();\n                this._dispose();\n            }\n        }\n\n        /**\r\n         * Remove object reference from dom\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_dispose\",\n        value: function _dispose() {\n\n            delete window.FlowUI['_loaders'][this.id];\n        }\n    }, {\n        key: \"close\",\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: \"dispose\",\n        get: function get() {\n            return this._dispose;\n        }\n    }]);\n\n    return Loader;\n}();\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * Modal Constructor\n  * @param props\n  * @param.id : Modal Id\n  * @param.parent : Parent element to inject modal into\n  * @param.className : Class names to append to modal\n     */\n\tfunction Modal(props) {\n\t\t_classCallCheck(this, Modal);\n\n\t\tprops = props || {};\n\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.children = {}; // associative array of child elements using this modal\n\n\t\t// Public Properties\n\t\tthis.type = \"modal\";\n\t\tthis.element = null;\n\n\t\t// Check if modal already exists, if so assign values from original\n\t\t// and don't re-render or export instance\n\t\tif (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\n\t\t\tObject.assign(this, window['FlowUI']._modals[this.id]);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\t_createClass(Modal, [{\n\t\tkey: '_exportObjInstance',\n\n\n\t\t/**\n   * Save reference to instantiated modal to window\n   * so can access to object through DOM\n   * @private\n   */\n\t\tvalue: function _exportObjInstance() {\n\t\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\t\twindow['FlowUI']._modals[this.id] = this;\n\t\t}\n\n\t\t/**\n   * Render Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_render',\n\t\tvalue: function _render() {\n\n\t\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\t\tvar container = document.createElement(\"div\");\n\t\t\tcontainer.setAttribute(\"id\", this.id);\n\t\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\t\tthis.parent.appendChild(container);\n\n\t\t\tthis.element = container;\n\t\t}\n\n\t\t/**\n   * Close Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_close',\n\t\tvalue: function _close() {\n\t\t\tvar _this = this;\n\n\t\t\tvar modalElement = document.getElementById(this.id);\n\t\t\tmodalElement.className += \" fadeOut\";\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tmodalElement.parentNode.removeChild(modalElement);\n\t\t\t\t_this.parent.className = _this.parent.className.replace('flowui-modal-parent', '');\n\t\t\t}, 1000);\n\n\t\t\tthis._dispose();\n\t\t}\n\n\t\t// Remove object references\n\n\t}, {\n\t\tkey: '_dispose',\n\t\tvalue: function _dispose() {\n\n\t\t\t// Delete any child object references (UI elements using this modal obj)\n\t\t\tfor (var key in this.children) {\n\t\t\t\tthis.children[key].dispose();\n\t\t\t}\n\t\t\tdelete window['FlowUI']._modals[this.id];\n\t\t}\n\t}, {\n\t\tkey: 'close',\n\t\tget: function get() {\n\t\t\treturn this._close;\n\t\t}\n\t}]);\n\n\treturn Modal;\n}();\n\n},{}]},{},[3])(3)\n});\n\n","\r\nmodule.exports = class Helpers {\r\n\r\n    /**\r\n     * Scroll to\r\n     * @param element\r\n     * @param to\r\n     * @param duration\r\n     */\r\n\r\n    static scrollTo(element, to, duration) {\r\n\r\n        let _this = this;\r\n\r\n        let start = element.scrollTop,\r\n            change = to - start,\r\n            increment = 20;\r\n\r\n        let animateScroll = (elapsedTime) => {\r\n            elapsedTime += increment;\r\n            let position = _this.easeInOut(elapsedTime, start, change, duration);\r\n            element.scrollTop = position;\r\n            if (elapsedTime < duration) {\r\n                setTimeout(() => {\r\n                    animateScroll(elapsedTime);\r\n                }, increment);\r\n            }\r\n        };\r\n\r\n        animateScroll(0);\r\n    }\r\n\r\n\r\n    /**\r\n     * Easing Function for Scrolling\r\n     * @param currentTime\r\n     * @param start\r\n     * @param change\r\n     * @param duration\r\n     * @returns {*}\r\n     */\r\n    static easeInOut(currentTime, start, change, duration) {\r\n        currentTime /= duration / 2;\r\n        if (currentTime < 1) {\r\n            return change / 2 * currentTime * currentTime + start;\r\n        }\r\n        currentTime -= 1;\r\n        return -change / 2 * (currentTime * (currentTime - 2) - 1) + start;\r\n    }\r\n\r\n\r\n}\r\n\r\n","// Dependencies\r\nconst Modal = require('./modal/js/modal.js');\r\nconst Loader = require('./loader/js/loader.js');\r\nconst Dialog = require('./dialog/js/dialog.js');\r\n\r\n\r\n// Export\r\nmodule.exports = {\r\n    Modal: Modal,\r\n    Loader: Loader,\r\n    Dialog: Dialog\r\n}","'use strict';\r\n\r\nmodule.exports = class Loader {\r\n\r\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\r\n    constructor(props = {}) {\r\n\r\n        this.id = props.id || \"loader-\" + new Date().getTime();\r\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\r\n        this.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\r\n        this.modalObj;\r\n\r\n        this.type = \"loader\";\r\n\r\n        this._render();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n    /**\r\n     * Save reference to instantiated modal to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._loaders = window['FlowUI']._loaders || {};\r\n        window['FlowUI']._loaders[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _render() {\r\n\r\n        this._renderModal();\r\n\r\n        // Check that element doesn't already exist\r\n        if (!document.getElementById(this.id)) {\r\n            let container = document.createElement(\"div\");\r\n            container.id = this.id;\r\n            container.className = \"flowui-loader\";\r\n\r\n            let loaderElement = document.createElement(\"div\");\r\n            loaderElement.className = \"spinner\";\r\n            container.appendChild(loaderElement);\r\n\r\n            document.getElementById(this.modalObj.id).appendChild(container);\r\n        }\r\n\r\n        this._centerVertically();\r\n        this._animateIn();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _renderModal() {\r\n        this.modalObj = new window['FlowUI'].Modal({\r\n            id: this.modalId,\r\n            parent: this.parent\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Parent Element\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let loaderElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\r\n        const loaderHeight = loaderElement.offsetHeight;\r\n        const loaderWidth = loaderElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // Center vertically in parent container\r\n        let topLoaderDiv = (parentHeight / 2) - (loaderHeight / 2);\r\n\r\n        // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\r\n        if (parentHeight > viewportHeight) {\r\n            topLoaderDiv = (viewportHeight / 2) - (loaderHeight / 2);\r\n\r\n            // If user is scrolled down at all, we need to adjust to make sure loader\r\n            // is displayed within current viewport\r\n            if (scrollPosition > 0) {\r\n                topLoaderDiv += scrollPosition;\r\n            }\r\n        }\r\n\r\n        loaderElement.style.top = topLoaderDiv + \"px\";\r\n        loaderElement.style.left = 'calc(50% - ' + (loaderWidth/2)  + 'px)';\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles Animating Dialog In\r\n     * @private\r\n     */\r\n    _animateIn() {\r\n\r\n        setTimeout(() => {\r\n            document.getElementById(this.id).className += \" animated zoomInLoader\";\r\n            document.getElementById(this.id).style.display = \"\";\r\n        }, 400);\r\n\r\n    }\r\n\r\n    /**\r\n     * Handle Animating Out Dialog\r\n     * @private\r\n     */\r\n    _animateOut() {\r\n        document.getElementById(this.id).className += \" zoomOutLoader\";\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing and removing from DOM\r\n     * @private\r\n     */\r\n    _close(dispose = true) {\r\n        this._animateOut();\r\n        if (dispose) {\r\n            this.modalObj.close();\r\n            this._dispose();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Remove object reference from dom\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        delete window.FlowUI['_loaders'][this.id];\r\n\r\n    }\r\n\r\n\r\n\r\n}","'use strict';\n\nmodule.exports = class Modal {\n\n\t/**\n\t * Modal Constructor\n\t * @param props\n\t * @param.id : Modal Id\n\t * @param.parent : Parent element to inject modal into\n\t * @param.className : Class names to append to modal\n     */\n\tconstructor(props) {\n\n\t\tprops = props || {};\n\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.children = {}; // associative array of child elements using this modal\n\n\t\t// Public Properties\n\t\tthis.type = \"modal\";\n\t\tthis.element = null;\n\n\n\t\t// Check if modal already exists, if so assign values from original\n\t\t// and don't re-render or export instance\n\t\tif (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\n\t\t\tObject.assign(this, window['FlowUI']._modals[this.id]);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\tget close() {\n\t\treturn this._close;\n\t}\n\n\n\t/**\n\t * Save reference to instantiated modal to window\n\t * so can access to object through DOM\n\t * @private\n\t */\n\t_exportObjInstance() {\n\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\twindow['FlowUI']._modals[this.id] = this;\n\t}\n\n\n\t/**\n\t * Render Modal\n\t * @private\n\t */\n\t_render() {\n\n\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\tconst container = document.createElement(\"div\");\n\t\tcontainer.setAttribute(\"id\", this.id);\n\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\tthis.parent.appendChild(container);\n\t\t\n\t\tthis.element = container;\n\n\t}\n\n\t/**\n\t * Close Modal\n\t * @private\n\t */\n\t_close() {\n\n        let modalElement = document.getElementById(this.id);\n        modalElement.className += \" fadeOut\";\n\n        setTimeout(() => {\n            modalElement.parentNode.removeChild(modalElement);\n\t\t\tthis.parent.className = this.parent.className.replace('flowui-modal-parent', '');\n        }, 1000);\n\n\t\tthis._dispose();\n\t}\n\n\t// Remove object references\n\t_dispose() {\n\n\t\t// Delete any child object references (UI elements using this modal obj)\n\t\tfor (var key in this.children) {\n\t\t\tthis.children[key].dispose();\n\t\t}\n\t\tdelete window['FlowUI']._modals[this.id];\n\n\t}\n\n}\n\n"],"sourceRoot":"/source/"}