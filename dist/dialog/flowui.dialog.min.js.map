{"version":3,"sources":["src/dialog/js/node_modules/browser-pack/_prelude.js","src/dialog/js/src/dialog/js/dialog.js","flowui.dialog.js","src/dialog/js/src/dialog/js/index.js","src/dialog/js/src/loader/js/loader.js","src/dialog/js/src/modal/js/modal.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","FlowUI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Dialog","_ref","id","title","html","url","promise","buttons","_ref$options","options","undefined","Date","getTime","DialogOptions","type","modalObj","loaderObj","dialogElement","parent","document","body","_renderDialog","_attachEvents","_registerEventListeners","_exportObjInstance","value","_dialogs","children","existingModal","getElementsByClassName","_modals","Modal","Loader","modalId","_this2","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","_this3","_renderModal","contentPromise","_getContent","container","createElement","setAttribute","className","contentWrapper","innerHTML","appendChild","content","then","_centerVertically","embeddedScripts","getElementsByTagName","script","src","eval","closeButtonElement","onclick","_close","bind","buttonsWrapper","x","forEach","button","buttonElement","href","modalElement","getElementById","close","_focus","viewportHeight","Math","max","documentElement","clientHeight","innerHeight","dialogHeight","clientWidth","innerWidth","offsetHeight","dialogWidth","offsetWidth","scrollPosition","scrollY","y","style","top","left","_this4","events","onclose","_setState","_dispose","modalHasChildDialogs","childDialogs","flowObject","push","_this5","setTimeout","parentNode","removeChild","ex","_reactivatePreviousDiaog","allDialogs","previousDialog","keys","_this6","sanitizeClasses","classes","detail","animation","out","state","event","CustomEvent","dispatchEvent","_this","dialog","_this7","escapable","addEventListener","_onStateChange","get","_ref2","_ref2$escapable","_ref2$animation","_ref2$events","in","onopen","2","../../loader/js/loader.js","../../modal/js/modal.js","./dialog.js","3","_typeof","Symbol","iterator","obj","constructor","arguments","querySelector","_render","_loaders","loaderElement","_animateIn","parentHeight","loaderHeight","loaderWidth","topLoaderDiv","display","dispose","_animateOut","4","assign","replace"],"mappings":"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","file":"flowui.dialog.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nmodule.exports = class Dialog {\r\n\r\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\r\n\r\n    constructor({id, title, html, url, promise, buttons, options = {}}) {\r\n\r\n        // Arguments\r\n        this.id = (id || \"dialog-\" + new Date().getTime());\r\n        this.title = title;\r\n        this.html = html;\r\n        this.url = url;\r\n        this.promise = promise;\r\n        this.buttons = buttons;\r\n\r\n        this.options = new DialogOptions(options);\r\n\r\n        // Public Properties\r\n        this.type = \"dialog\";\r\n        this.modalObj;\r\n        this.loaderObj;\r\n        this.dialogElement = null;\r\n        this.parent = document.body;\r\n\r\n\r\n        this._renderDialog();\r\n        this._attachEvents();\r\n        this._registerEventListeners();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n    get centerVertically() {\r\n        return this._centerVertically;\r\n    }\r\n\r\n\r\n    /**\r\n     * Save reference to instantiated dialog's to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\r\n        window['FlowUI']._dialogs[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n     _renderModal() {\r\n\r\n        // Check if modal already exists for parent\r\n        const existingModal = this.parent.getElementsByClassName('flowui-modal')[0];\r\n        if (existingModal) {\r\n            this.modalObj = window['FlowUI']._modals[existingModal.id];\r\n        }\r\n        // Otherwise, create new instance\r\n        else {\r\n            this.modalObj = new window['FlowUI'].Modal();\r\n        }\r\n\r\n\r\n        // If dialog content requires http request, show loader before rendering\r\n        if (this.url || this.promise) {\r\n            this.loaderObj = new window['FlowUI'].Loader({\r\n                modalId: this.modalObj.id\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Dialog Content (Async)\r\n     * @private\r\n     */\r\n    _getContent() {\r\n\r\n        // If promise provided during instantiation, use promise object instead to get content\r\n        if (this.promise) {\r\n            return this.promise;\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // Static content provided as property\r\n            if (this.html) {\r\n                resolve(this.html);\r\n            }\r\n\r\n            // Content from a partial or template retreived via http\r\n            else if (this.url) {\r\n\r\n                // Do the usual XHR stuff\r\n                var req = new XMLHttpRequest();\r\n                req.open('GET', this.url);\r\n\r\n                req.onload = function() {\r\n                    if (req.status == 200) {\r\n                        // Resolve the promise with the response text\r\n                        resolve(req.response);\r\n                    }\r\n                    else {\r\n                        reject(Error(req.statusText));\r\n                    }\r\n                };\r\n\r\n                req.onerror = function() {\r\n                    reject(Error(\"Network Error\"));\r\n                };\r\n\r\n                req.send();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Render Dialog\r\n     * @private\r\n     */\r\n    _renderDialog() {\r\n\r\n        this._renderModal();\r\n        let contentPromise = this._getContent();\r\n\r\n        // Render Container\r\n        let container = document.createElement(\"div\");\r\n        container.setAttribute('id', this.id);\r\n        container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\r\n        //container.style.display = \"none\";\r\n\r\n        // Render Content Wrapper\r\n        let contentWrapper = document.createElement('div');\r\n        contentWrapper.setAttribute('class', 'content');\r\n        if (this.title) {\r\n            let title = document.createElement('div');\r\n            title.setAttribute('class', 'title');\r\n            title.innerHTML = this.title;\r\n            contentWrapper.appendChild(title);\r\n        }\r\n\r\n        // Render Inner Content\r\n        let content = document.createElement('div');\r\n        contentPromise.then((html) => {\r\n            content.innerHTML = html;\r\n            this._centerVertically();\r\n\r\n            // Content can contain scripts, which need to be eval\r\n            const embeddedScripts = content.getElementsByTagName('script');\r\n            for (let key in embeddedScripts) {\r\n                let script = embeddedScripts[key];\r\n                if (script.src == \"\") {\r\n                    eval(script.innerHTML);\r\n                }\r\n            }\r\n\r\n        });\r\n        content.setAttribute('class', 'inner-content');\r\n        contentWrapper.appendChild(content);\r\n\r\n        // Render Close Button\r\n        let closeButtonElement = document.createElement('a');\r\n        closeButtonElement.onclick = this._close.bind(this);\r\n        closeButtonElement.className = \"close\";\r\n        contentWrapper.appendChild(closeButtonElement);\r\n\r\n        // Render Buttons\r\n        if (this.buttons && this.buttons.length > 0) {\r\n            let buttonsWrapper = document.createElement('div');\r\n            buttonsWrapper.setAttribute('class', 'buttons');\r\n            let x = 0;\r\n            this.buttons.forEach(function(button) {\r\n                let buttonElement = document.createElement(\"a\");\r\n                buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\r\n                buttonElement.innerHTML = button.title;\r\n                buttonElement.onclick = button.onclick;\r\n                buttonElement.href = button.href || 'javascript:;';\r\n                buttonsWrapper.appendChild(buttonElement);\r\n            });\r\n            contentWrapper.appendChild(buttonsWrapper);\r\n        }\r\n\r\n        container.appendChild(contentWrapper);\r\n\r\n        // Add to modal\r\n        let modalElement = document.getElementById(this.modalObj.id);\r\n        modalElement.appendChild(container);\r\n\r\n        // Store dialog element to class property\r\n        this.dialogElement = container;\r\n\r\n        // Once content loaded, display\r\n        contentPromise.then(() => {\r\n\r\n            // Hide Loader\r\n            if (this.loaderObj) {\r\n                this.loaderObj.close(false);\r\n            }\r\n\r\n            this._centerVertically();\r\n            this._focus();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Viewport\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let dialogElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        const dialogHeight = dialogElement.offsetHeight;\r\n        const dialogWidth = dialogElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // X & Y Coordinates\r\n        const x = (viewportWidth / 2) - (dialogWidth / 2);\r\n        const y = scrollPosition + (viewportHeight / 2) - (dialogHeight / 2);\r\n\r\n\r\n        dialogElement.style.top = y + 'px';\r\n        dialogElement.style.left = 'calc(50% - '+ (dialogWidth/2) +'px)';\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Handle Closing Dialog and removing from DOM\r\n     * @private\r\n     */\r\n    _close() {\r\n\r\n        if (this.options.events.onclose) {\r\n            this.options.events.onclose();\r\n        }\r\n        this._setState('closed');\r\n        this._dispose();\r\n\r\n        // Only close modal if there's no other dialogs using it\r\n        const modalHasChildDialogs = () =>\r\n        {\r\n            var childDialogs = [];\r\n            for (var key in this.modalObj.children) {\r\n                var flowObject = this.modalObj.children[key];\r\n                if (flowObject.type === 'dialog') {\r\n                    childDialogs.push(flowObject);\r\n                }\r\n            }\r\n            return childDialogs.length > 1;\r\n\r\n        }\r\n\r\n        if (!modalHasChildDialogs()) {\r\n            this.modalObj.close();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove instance from global window scope and check if another dialog\r\n     * should be made active\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        // TO DO: Element from Remove from DOM\r\n        setTimeout(()=> {\r\n            try {\r\n                this.dialogElement.parentNode.removeChild(this.dialogElement);\r\n            }\r\n            catch (ex) {\r\n                // modal obj already removed\r\n            }\r\n        }, 1000);\r\n\r\n        delete window['FlowUI']._dialogs[this.id];\r\n\r\n        this._reactivatePreviousDiaog();\r\n    }\r\n\r\n    /**\r\n     * Reactives previous dialog (if any)\r\n     * @private\r\n     */\r\n    _reactivatePreviousDiaog() {\r\n        let allDialogs = window['FlowUI']._dialogs;\r\n        let previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]]\r\n        if (previousDialog) {\r\n            setTimeout(() => {\r\n                previousDialog._focus();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Dialog State Change (focus, inactive, dismissed)\r\n     * @param e\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _onStateChange(e) {\r\n\r\n        // Strip out any additional classes added after\r\n        let sanitizeClasses = () => {\r\n            const classes = \"flowui-dialog animated \" + this.options.className;\r\n            return classes;\r\n        }\r\n\r\n        document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\r\n\r\n        switch (e.detail.status) {\r\n            case 'active':\r\n                document.getElementById(this.id).className =  sanitizeClasses() + ' ' + this.options.animation.in;\r\n                break;\r\n            case 'inactive':\r\n                if (Object.keys(window['FlowUI']._dialogs).length > 1) {\r\n                    document.getElementById(this.id).className =  sanitizeClasses() + ' ' + this.options.animation.out;\r\n                    break;\r\n                }\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            case 'closed':\r\n                document.getElementById(this.id).className = sanitizeClasses() + ' ' +  this.options.animation.out;\r\n                break;\r\n            default:\r\n                // catch all\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Set Dialog State (active, inactive)\r\n     * @private\r\n     */\r\n    _setState(state) {\r\n\r\n        var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\r\n        this.dialogElement.dispatchEvent(event);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Sets active dialog, and inactivates others\r\n     * @private\r\n     */\r\n    _focus() {\r\n\r\n        let _this = this;\r\n        this._setState(\"active\");\r\n\r\n        let allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\r\n        for (var key in allDialogs) {\r\n            var dialog = allDialogs[key];\r\n            if (dialog.id != _this.id) {\r\n                dialog._setState(\"inactive\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind any necessary events\r\n     * @private\r\n     */\r\n    _attachEvents() {\r\n\r\n        // Allow user to hit escape to close window (unless overwritten by param)\r\n        if (this.options.escapable) {\r\n            window.addEventListener(\"keyup\", (event) => {\r\n                this._close();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Register for any event listeners\r\n     * @private\r\n     */\r\n    _registerEventListeners() {\r\n\r\n        // Listen for dialog state change event\r\n        this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n/**\r\n * Options to customize Dialog\r\n */\r\nclass DialogOptions {\r\n\r\n    constructor({className, escapable = true, animation = {}, events = {} }) {\r\n\r\n            this.className = className || '';\r\n            this.escapable = escapable;\r\n            this.animation =  {\r\n                in: animation.in || 'pulseIn',\r\n                out: animation.out || 'pulseOut'\r\n            },\r\n            this.events = {\r\n                onopen: events.onopen || null,\r\n                onclose: events.onclose || null\r\n            }\r\n    }\r\n\r\n}\r\n\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.FlowUI = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  buttons ([{title: '', onclick: function}]): Array of buttons to render\r\n     *  options (DialogOption): Customization options\r\n     */\n\n    function Dialog(_ref) {\n        var id = _ref.id;\n        var title = _ref.title;\n        var html = _ref.html;\n        var url = _ref.url;\n        var promise = _ref.promise;\n        var buttons = _ref.buttons;\n        var _ref$options = _ref.options;\n        var options = _ref$options === undefined ? {} : _ref$options;\n\n        _classCallCheck(this, Dialog);\n\n        // Arguments\n        this.id = id || \"dialog-\" + new Date().getTime();\n        this.title = title;\n        this.html = html;\n        this.url = url;\n        this.promise = promise;\n        this.buttons = buttons;\n\n        this.options = new DialogOptions(options);\n\n        // Public Properties\n        this.type = \"dialog\";\n        this.modalObj;\n        this.loaderObj;\n        this.dialogElement = null;\n        this.parent = document.body;\n\n        this._renderDialog();\n        this._attachEvents();\n        this._registerEventListeners();\n        this._exportObjInstance();\n    }\n\n    _createClass(Dialog, [{\n        key: \"_exportObjInstance\",\n\n\n        /**\r\n         * Save reference to instantiated dialog's to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\n            window['FlowUI']._dialogs[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderModal\",\n        value: function _renderModal() {\n\n            // Check if modal already exists for parent\n            var existingModal = this.parent.getElementsByClassName('flowui-modal')[0];\n            if (existingModal) {\n                this.modalObj = window['FlowUI']._modals[existingModal.id];\n            }\n            // Otherwise, create new instance\n            else {\n                    this.modalObj = new window['FlowUI'].Modal();\n                }\n\n            // If dialog content requires http request, show loader before rendering\n            if (this.url || this.promise) {\n                this.loaderObj = new window['FlowUI'].Loader({\n                    modalId: this.modalObj.id\n                });\n            }\n        }\n\n        /**\r\n         * Get Dialog Content (Async)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_getContent\",\n        value: function _getContent() {\n            var _this2 = this;\n\n            // If promise provided during instantiation, use promise object instead to get content\n            if (this.promise) {\n                return this.promise;\n            }\n\n            return new Promise(function (resolve, reject) {\n\n                // Static content provided as property\n                if (_this2.html) {\n                    resolve(_this2.html);\n                }\n\n                // Content from a partial or template retreived via http\n                else if (_this2.url) {\n\n                        // Do the usual XHR stuff\n                        var req = new XMLHttpRequest();\n                        req.open('GET', _this2.url);\n\n                        req.onload = function () {\n                            if (req.status == 200) {\n                                // Resolve the promise with the response text\n                                resolve(req.response);\n                            } else {\n                                reject(Error(req.statusText));\n                            }\n                        };\n\n                        req.onerror = function () {\n                            reject(Error(\"Network Error\"));\n                        };\n\n                        req.send();\n                    }\n            });\n        }\n\n        /**\r\n         * Render Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderDialog\",\n        value: function _renderDialog() {\n            var _this3 = this;\n\n            this._renderModal();\n            var contentPromise = this._getContent();\n\n            // Render Container\n            var container = document.createElement(\"div\");\n            container.setAttribute('id', this.id);\n            container.setAttribute('class', 'flowui-dialog animated ' + (this.options.className ? this.options.className : ''));\n            //container.style.display = \"none\";\n\n            // Render Content Wrapper\n            var contentWrapper = document.createElement('div');\n            contentWrapper.setAttribute('class', 'content');\n            if (this.title) {\n                var title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = this.title;\n                contentWrapper.appendChild(title);\n            }\n\n            // Render Inner Content\n            var content = document.createElement('div');\n            contentPromise.then(function (html) {\n                content.innerHTML = html;\n                _this3._centerVertically();\n\n                // Content can contain scripts, which need to be eval\n                var embeddedScripts = content.getElementsByTagName('script');\n                for (var key in embeddedScripts) {\n                    var script = embeddedScripts[key];\n                    if (script.src == \"\") {\n                        eval(script.innerHTML);\n                    }\n                }\n            });\n            content.setAttribute('class', 'inner-content');\n            contentWrapper.appendChild(content);\n\n            // Render Close Button\n            var closeButtonElement = document.createElement('a');\n            closeButtonElement.onclick = this._close.bind(this);\n            closeButtonElement.className = \"close\";\n            contentWrapper.appendChild(closeButtonElement);\n\n            // Render Buttons\n            if (this.buttons && this.buttons.length > 0) {\n                (function () {\n                    var buttonsWrapper = document.createElement('div');\n                    buttonsWrapper.setAttribute('class', 'buttons');\n                    var x = 0;\n                    _this3.buttons.forEach(function (button) {\n                        var buttonElement = document.createElement(\"a\");\n                        buttonElement.setAttribute('class', 'flowui-button ' + x++ + ' ' + (button.className || ''));\n                        buttonElement.innerHTML = button.title;\n                        buttonElement.onclick = button.onclick;\n                        buttonElement.href = button.href || 'javascript:;';\n                        buttonsWrapper.appendChild(buttonElement);\n                    });\n                    contentWrapper.appendChild(buttonsWrapper);\n                })();\n            }\n\n            container.appendChild(contentWrapper);\n\n            // Add to modal\n            var modalElement = document.getElementById(this.modalObj.id);\n            modalElement.appendChild(container);\n\n            // Store dialog element to class property\n            this.dialogElement = container;\n\n            // Once content loaded, display\n            contentPromise.then(function () {\n\n                // Hide Loader\n                if (_this3.loaderObj) {\n                    _this3.loaderObj.close(false);\n                }\n\n                _this3._centerVertically();\n                _this3._focus();\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Viewport\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_centerVertically\",\n        value: function _centerVertically() {\n\n            var dialogElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            var dialogHeight = dialogElement.offsetHeight;\n            var dialogWidth = dialogElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // X & Y Coordinates\n            var x = viewportWidth / 2 - dialogWidth / 2;\n            var y = scrollPosition + viewportHeight / 2 - dialogHeight / 2;\n\n            dialogElement.style.top = y + 'px';\n            dialogElement.style.left = 'calc(50% - ' + dialogWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handle Closing Dialog and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_close\",\n        value: function _close() {\n            var _this4 = this;\n\n            if (this.options.events.onclose) {\n                this.options.events.onclose();\n            }\n            this._setState('closed');\n            this._dispose();\n\n            // Only close modal if there's no other dialogs using it\n            var modalHasChildDialogs = function modalHasChildDialogs() {\n                var childDialogs = [];\n                for (var key in _this4.modalObj.children) {\n                    var flowObject = _this4.modalObj.children[key];\n                    if (flowObject.type === 'dialog') {\n                        childDialogs.push(flowObject);\n                    }\n                }\n                return childDialogs.length > 1;\n            };\n\n            if (!modalHasChildDialogs()) {\n                this.modalObj.close();\n            }\n        }\n\n        /**\r\n         * Remove instance from global window scope and check if another dialog\r\n         * should be made active\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_dispose\",\n        value: function _dispose() {\n            var _this5 = this;\n\n            // TO DO: Element from Remove from DOM\n            setTimeout(function () {\n                try {\n                    _this5.dialogElement.parentNode.removeChild(_this5.dialogElement);\n                } catch (ex) {\n                    // modal obj already removed\n                }\n            }, 1000);\n\n            delete window['FlowUI']._dialogs[this.id];\n\n            this._reactivatePreviousDiaog();\n        }\n\n        /**\r\n         * Reactives previous dialog (if any)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_reactivatePreviousDiaog\",\n        value: function _reactivatePreviousDiaog() {\n            var allDialogs = window['FlowUI']._dialogs;\n            var previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]];\n            if (previousDialog) {\n                setTimeout(function () {\n                    previousDialog._focus();\n                }, 500);\n            }\n        }\n\n        /**\r\n         * Handle Dialog State Change (focus, inactive, dismissed)\r\n         * @param e\r\n         * @returns {string}\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_onStateChange\",\n        value: function _onStateChange(e) {\n            var _this6 = this;\n\n            // Strip out any additional classes added after\n            var sanitizeClasses = function sanitizeClasses() {\n                var classes = \"flowui-dialog animated \" + _this6.options.className;\n                return classes;\n            };\n\n            document.getElementById(this.id).setAttribute(\"state\", e.detail.status);\n\n            switch (e.detail.status) {\n                case 'active':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.in;\n                    break;\n                case 'inactive':\n                    if (Object.keys(window['FlowUI']._dialogs).length > 1) {\n                        document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                        break;\n                    }\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                case 'closed':\n                    document.getElementById(this.id).className = sanitizeClasses() + ' ' + this.options.animation.out;\n                    break;\n                default:\n                // catch all\n            }\n        }\n\n        /**\r\n         * Set Dialog State (active, inactive)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_setState\",\n        value: function _setState(state) {\n\n            var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\n            this.dialogElement.dispatchEvent(event);\n        }\n\n        /**\r\n         * Sets active dialog, and inactivates others\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_focus\",\n        value: function _focus() {\n\n            var _this = this;\n            this._setState(\"active\");\n\n            var allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\n            for (var key in allDialogs) {\n                var dialog = allDialogs[key];\n                if (dialog.id != _this.id) {\n                    dialog._setState(\"inactive\");\n                }\n            }\n        }\n\n        /**\r\n         * Bind any necessary events\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_attachEvents\",\n        value: function _attachEvents() {\n            var _this7 = this;\n\n            // Allow user to hit escape to close window (unless overwritten by param)\n            if (this.options.escapable) {\n                window.addEventListener(\"keyup\", function (event) {\n                    _this7._close();\n                });\n            }\n        }\n\n        /**\r\n         * Register for any event listeners\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_registerEventListeners\",\n        value: function _registerEventListeners() {\n\n            // Listen for dialog state change event\n            this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\n        }\n    }, {\n        key: \"close\",\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: \"dispose\",\n        get: function get() {\n            return this._dispose;\n        }\n    }, {\n        key: \"centerVertically\",\n        get: function get() {\n            return this._centerVertically;\n        }\n    }]);\n\n    return Dialog;\n}();\n\n/**\r\n * Options to customize Dialog\r\n */\n\nvar DialogOptions = function DialogOptions(_ref2) {\n    var className = _ref2.className;\n    var _ref2$escapable = _ref2.escapable;\n    var escapable = _ref2$escapable === undefined ? true : _ref2$escapable;\n    var _ref2$animation = _ref2.animation;\n    var animation = _ref2$animation === undefined ? {} : _ref2$animation;\n    var _ref2$events = _ref2.events;\n    var events = _ref2$events === undefined ? {} : _ref2$events;\n\n    _classCallCheck(this, DialogOptions);\n\n    this.className = className || '';\n    this.escapable = escapable;\n    this.animation = {\n        in: animation.in || 'pulseIn',\n        out: animation.out || 'pulseOut'\n    }, this.events = {\n        onopen: events.onopen || null,\n        onclose: events.onclose || null\n    };\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n// Dependencies\n\nvar Modal = require('../../modal/js/modal.js');\nvar Loader = require('../../loader/js/loader.js');\n\n// Core Module\nvar Dialog = require('./dialog.js');\n\n// Export\nmodule.exports = {\n    Modal: Modal,\n    Loader: Loader,\n    Dialog: Dialog\n};\n\n},{\"../../loader/js/loader.js\":3,\"../../modal/js/modal.js\":4,\"./dialog.js\":1}],3:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\n    function Loader() {\n        var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        _classCallCheck(this, Loader);\n\n        this.id = props.id || \"loader-\" + new Date().getTime();\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\n        this.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n        this.modalObj;\n\n        this.type = \"loader\";\n\n        this._render();\n        this._exportObjInstance();\n    }\n\n    _createClass(Loader, [{\n        key: \"_exportObjInstance\",\n\n\n        /**\r\n         * Save reference to instantiated modal to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._loaders = window['FlowUI']._loaders || {};\n            window['FlowUI']._loaders[this.id] = this;\n\n            // Attach a reference to parent modal\n            this.modalObj.children[this.id] = this;\n        }\n\n        /**\r\n         *\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_render\",\n        value: function _render() {\n\n            this._renderModal();\n\n            // Check that element doesn't already exist\n            if (!document.getElementById(this.id)) {\n                var container = document.createElement(\"div\");\n                container.id = this.id;\n                container.className = \"flowui-loader\";\n\n                var loaderElement = document.createElement(\"div\");\n                loaderElement.className = \"spinner\";\n                container.appendChild(loaderElement);\n\n                document.getElementById(this.modalObj.id).appendChild(container);\n            }\n\n            this._centerVertically();\n            this._animateIn();\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderModal\",\n        value: function _renderModal() {\n            this.modalObj = new window['FlowUI'].Modal({\n                id: this.modalId,\n                parent: this.parent\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Parent Element\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_centerVertically\",\n        value: function _centerVertically() {\n\n            var loaderElement = document.getElementById(this.id);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\n            var loaderHeight = loaderElement.offsetHeight;\n            var loaderWidth = loaderElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // Center vertically in parent container\n            var topLoaderDiv = parentHeight / 2 - loaderHeight / 2;\n\n            // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\n            if (parentHeight > viewportHeight) {\n                topLoaderDiv = viewportHeight / 2 - loaderHeight / 2;\n\n                // If user is scrolled down at all, we need to adjust to make sure loader\n                // is displayed within current viewport\n                if (scrollPosition > 0) {\n                    topLoaderDiv += scrollPosition;\n                }\n            }\n\n            loaderElement.style.top = topLoaderDiv + \"px\";\n            loaderElement.style.left = 'calc(50% - ' + loaderWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handles Animating Dialog In\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateIn\",\n        value: function _animateIn() {\n            var _this = this;\n\n            setTimeout(function () {\n                document.getElementById(_this.id).className += \" animated zoomInLoader\";\n                document.getElementById(_this.id).style.display = \"\";\n            }, 400);\n        }\n\n        /**\r\n         * Handle Animating Out Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateOut\",\n        value: function _animateOut() {\n            document.getElementById(this.id).className += \" zoomOutLoader\";\n        }\n\n        /**\r\n         * Handle Closing and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_close\",\n        value: function _close() {\n            var dispose = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n            this._animateOut();\n            if (dispose) {\n                this.modalObj.close();\n                this._dispose();\n            }\n        }\n\n        /**\r\n         * Remove object reference from dom\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_dispose\",\n        value: function _dispose() {\n\n            delete window.FlowUI['_loaders'][this.id];\n        }\n    }, {\n        key: \"close\",\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: \"dispose\",\n        get: function get() {\n            return this._dispose;\n        }\n    }]);\n\n    return Loader;\n}();\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * Modal Constructor\n  * @param props\n  * @param.id : Modal Id\n  * @param.parent : Parent element to inject modal into\n  * @param.className : Class names to append to modal\n     */\n\tfunction Modal(props) {\n\t\t_classCallCheck(this, Modal);\n\n\t\tprops = props || {};\n\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.children = {}; // associative array of child elements using this modal\n\n\t\tthis.type = \"dialog\";\n\n\t\t// Check if modal already exists, if so assign values from original\n\t\t// and don't re-render or export instance\n\t\tif (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\n\t\t\tObject.assign(this, window['FlowUI']._modals[this.id]);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\t_createClass(Modal, [{\n\t\tkey: '_exportObjInstance',\n\n\n\t\t/**\n   * Save reference to instantiated modal to window\n   * so can access to object through DOM\n   * @private\n   */\n\t\tvalue: function _exportObjInstance() {\n\t\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\t\twindow['FlowUI']._modals[this.id] = this;\n\t\t}\n\n\t\t/**\n   * Render Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_render',\n\t\tvalue: function _render() {\n\n\t\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\t\tvar container = document.createElement(\"div\");\n\t\t\tcontainer.setAttribute(\"id\", this.id);\n\t\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\t\tthis.parent.appendChild(container);\n\t\t}\n\n\t\t/**\n   * Close Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_close',\n\t\tvalue: function _close() {\n\t\t\tvar _this = this;\n\n\t\t\tvar modalElement = document.getElementById(this.id);\n\t\t\tmodalElement.className += \" fadeOut\";\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tmodalElement.parentNode.removeChild(modalElement);\n\t\t\t\t_this.parent.className = _this.parent.className.replace('flowui-modal-parent', '');\n\t\t\t}, 1000);\n\n\t\t\tthis._dispose();\n\t\t}\n\n\t\t// Remove object references\n\n\t}, {\n\t\tkey: '_dispose',\n\t\tvalue: function _dispose() {\n\n\t\t\t// Delete any child object references (UI elements using this modal obj)\n\t\t\tfor (var key in this.children) {\n\t\t\t\tthis.children[key].dispose();\n\t\t\t}\n\t\t\tdelete window['FlowUI']._modals[this.id];\n\t\t}\n\t}, {\n\t\tkey: 'close',\n\t\tget: function get() {\n\t\t\treturn this._close;\n\t\t}\n\t}]);\n\n\treturn Modal;\n}();\n\n},{}]},{},[2])(2)\n});\n\n","'use strict';\r\n\r\n// Dependencies\r\nconst Modal = require('../../modal/js/modal.js');\r\nconst Loader = require('../../loader/js/loader.js');\r\n\r\n// Core Module\r\nconst Dialog = require('./dialog.js');\r\n\r\n// Export\r\nmodule.exports = {\r\n    Modal: Modal,\r\n    Loader: Loader,\r\n    Dialog: Dialog\r\n}","'use strict';\r\n\r\nmodule.exports = class Loader {\r\n\r\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\r\n    constructor(props = {}) {\r\n\r\n        this.id = props.id || \"loader-\" + new Date().getTime();\r\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\r\n        this.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\r\n        this.modalObj;\r\n\r\n        this.type = \"loader\";\r\n\r\n        this._render();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get dispose() {\r\n        return this._dispose;\r\n    }\r\n\r\n    /**\r\n     * Save reference to instantiated modal to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._loaders = window['FlowUI']._loaders || {};\r\n        window['FlowUI']._loaders[this.id] = this;\r\n\r\n        // Attach a reference to parent modal\r\n        this.modalObj.children[this.id] = this;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _render() {\r\n\r\n        this._renderModal();\r\n\r\n        // Check that element doesn't already exist\r\n        if (!document.getElementById(this.id)) {\r\n            let container = document.createElement(\"div\");\r\n            container.id = this.id;\r\n            container.className = \"flowui-loader\";\r\n\r\n            let loaderElement = document.createElement(\"div\");\r\n            loaderElement.className = \"spinner\";\r\n            container.appendChild(loaderElement);\r\n\r\n            document.getElementById(this.modalObj.id).appendChild(container);\r\n        }\r\n\r\n        this._centerVertically();\r\n        this._animateIn();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _renderModal() {\r\n        this.modalObj = new window['FlowUI'].Modal({\r\n            id: this.modalId,\r\n            parent: this.parent\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Parent Element\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let loaderElement = document.getElementById(this.id);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\r\n        const loaderHeight = loaderElement.offsetHeight;\r\n        const loaderWidth = loaderElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // Center vertically in parent container\r\n        let topLoaderDiv = (parentHeight / 2) - (loaderHeight / 2);\r\n\r\n        // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\r\n        if (parentHeight > viewportHeight) {\r\n            topLoaderDiv = (viewportHeight / 2) - (loaderHeight / 2);\r\n\r\n            // If user is scrolled down at all, we need to adjust to make sure loader\r\n            // is displayed within current viewport\r\n            if (scrollPosition > 0) {\r\n                topLoaderDiv += scrollPosition;\r\n            }\r\n        }\r\n\r\n        loaderElement.style.top = topLoaderDiv + \"px\";\r\n        loaderElement.style.left = 'calc(50% - ' + (loaderWidth/2)  + 'px)';\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles Animating Dialog In\r\n     * @private\r\n     */\r\n    _animateIn() {\r\n\r\n        setTimeout(() => {\r\n            document.getElementById(this.id).className += \" animated zoomInLoader\";\r\n            document.getElementById(this.id).style.display = \"\";\r\n        }, 400);\r\n\r\n    }\r\n\r\n    /**\r\n     * Handle Animating Out Dialog\r\n     * @private\r\n     */\r\n    _animateOut() {\r\n        document.getElementById(this.id).className += \" zoomOutLoader\";\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing and removing from DOM\r\n     * @private\r\n     */\r\n    _close(dispose = true) {\r\n        this._animateOut();\r\n        if (dispose) {\r\n            this.modalObj.close();\r\n            this._dispose();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Remove object reference from dom\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        delete window.FlowUI['_loaders'][this.id];\r\n\r\n    }\r\n\r\n\r\n\r\n}","'use strict';\n\nmodule.exports = class Modal {\n\n\t/**\n\t * Modal Constructor\n\t * @param props\n\t * @param.id : Modal Id\n\t * @param.parent : Parent element to inject modal into\n\t * @param.className : Class names to append to modal\n     */\n\tconstructor(props) {\n\n\t\tprops = props || {};\n\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.children = {}; // associative array of child elements using this modal\n\n\t\tthis.type = \"dialog\";\n\n\t\t// Check if modal already exists, if so assign values from original\n\t\t// and don't re-render or export instance\n\t\tif (window['FlowUI']._modals && window['FlowUI']._modals[this.id]) {\n\t\t\tObject.assign(this, window['FlowUI']._modals[this.id]);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\tget close() {\n\t\treturn this._close;\n\t}\n\n\n\t/**\n\t * Save reference to instantiated modal to window\n\t * so can access to object through DOM\n\t * @private\n\t */\n\t_exportObjInstance() {\n\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\twindow['FlowUI']._modals[this.id] = this;\n\t}\n\n\n\t/**\n\t * Render Modal\n\t * @private\n\t */\n\t_render() {\n\n\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\tconst container = document.createElement(\"div\");\n\t\tcontainer.setAttribute(\"id\", this.id);\n\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\tthis.parent.appendChild(container);\n\t}\n\n\t/**\n\t * Close Modal\n\t * @private\n\t */\n\t_close() {\n\n        let modalElement = document.getElementById(this.id);\n        modalElement.className += \" fadeOut\";\n\n        setTimeout(() => {\n            modalElement.parentNode.removeChild(modalElement);\n\t\t\tthis.parent.className = this.parent.className.replace('flowui-modal-parent', '');\n        }, 1000);\n\n\t\tthis._dispose();\n\t}\n\n\t// Remove object references\n\t_dispose() {\n\n\t\t// Delete any child object references (UI elements using this modal obj)\n\t\tfor (var key in this.children) {\n\t\t\tthis.children[key].dispose();\n\t\t}\n\t\tdelete window['FlowUI']._modals[this.id];\n\n\t}\n\n}\n\n"],"sourceRoot":"/source/"}