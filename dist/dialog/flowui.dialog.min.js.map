{"version":3,"sources":["src/dialog/js/node_modules/browser-pack/_prelude.js","src/dialog/js/src/dialog/js/dialog.js","flowui.dialog.js","src/dialog/js/src/dialog/js/index.js","src/dialog/js/src/loader/js/loader.js","src/dialog/js/src/modal/js/modal.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","FlowUI","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Dialog","_ref","id","title","html","url","parent","className","_ref$escapable","escapable","undefined","_ref$animation","animation","_ref$events","events","_ref$buttons","buttons","promise","Date","getTime","dialogId","modalId","document","querySelector","body","modalObj","loaderObj","in","out","onopen","onclose","dialogElement","_renderDialog","_attachEvents","_registerEventListeners","_exportObjInstance","value","_dialogs","existingModal","getElementsByClassName","_modals","Modal","Loader","_this","Promise","resolve","reject","req","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","_this2","_renderModal","container","createElement","setAttribute","contentWrapper","innerHTML","appendChild","content","_getContent","then","_centerVertically","closeButtonElement","onclick","_close","bind","buttonsWrapper","x","forEach","button","buttonElement","modalElement","getElementById","close","_focus","viewportHeight","offsetHeight","Math","max","documentElement","clientHeight","innerHeight","dialogHeight","clientWidth","innerWidth","dialogWidth","offsetWidth","scrollPosition","scrollY","y","style","top","left","_this3","_setState","_dispose","modalHasChildDialogs","dialog","_this4","setTimeout","parentNode","removeChild","_reactivatePreviousDiaog","allDialogs","previousDialog","keys","_this5","normalizeClasses","classes","trim","split","normalized","push","join","detail","state","event","CustomEvent","dispatchEvent","_this6","addEventListener","_onStateChange","get","2","../../loader/js/loader.js","../../modal/js/modal.js","./dialog.js","3","arguments","loaderId","_render","loaderElement","_animateIn","parentHeight","loaderHeight","loaderWidth","topLoaderDiv","display","dispose","_animateOut","4","replace"],"mappings":"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","file":"flowui.dialog.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nmodule.exports = class Dialog {\r\n\r\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  className: CSS class to add to element\r\n     *  parent: Element to inject modal (as query expression)\r\n     *  escapable: True to allow user to close via escape button (default)\r\n     *  animation: {\r\n     *   in: \"fadeIn\" | \"pulseIn\" | \"zoomIn\"\r\n     *   out: \"fadeOut\" | \"pulseOut\" | \"zooOut\"\r\n     *  }\r\n     *  events: {\r\n     *   onopen: function,\r\n     *   onclose: function\r\n     *  }\r\n     *  buttons: [\r\n     *      { title: \"Button Title\", onclick: function }\r\n     *  ]\r\n     * }\r\n     */\r\n    /* TO DO: Move classname, escapable, etc into an 'options' property */\r\n    constructor({id, title, html, url, parent, className, escapable = true, animation = {}, events = {}, buttons = [], promise }) {\r\n\r\n        // Arguments\r\n        this.id = (id || new Date().getTime());\r\n        this.dialogId = \"dialog-\" + this.id;\t// ID for Dialog Element\r\n        this.modalId = \"modal-\" + this.id;\t// Generated ID for parent Modal\r\n        this.title = title;\r\n        this.html = html;\r\n        this.url = url;\r\n        this.promise = promise;\r\n        this.parent = parent ? (typeof parent === 'object' ? parent : document.querySelector(parent)) : document.body;\r\n        this.className = className;\r\n        this.modalObj;\r\n        this.loaderObj;\r\n        this.buttons = buttons;\r\n        this.escapable = escapable;\r\n\r\n        this.animation = {\r\n            in: animation.in || \"fadeIn\",\r\n            out: animation.out || \"fadeOut\"\r\n        };\r\n\r\n        this.events = {\r\n            onopen: events.onopen,\r\n            onclose: events.onclose\r\n        };\r\n\r\n        // Public Properties\r\n        this.dialogElement = null;\r\n\r\n\r\n        this._renderDialog();\r\n        this._attachEvents();\r\n        this._registerEventListeners();\r\n        this._exportObjInstance();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n    get centerVertically() {\r\n        return this._centerVertically;\r\n    }\r\n\r\n\r\n    /**\r\n     * Save reference to instantiated dialog's to window\r\n     * so can access to object through DOM\r\n     * @private\r\n     */\r\n    _exportObjInstance() {\r\n        window['FlowUI'] = window['FlowUI'] || {};\r\n        window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\r\n        window['FlowUI']._dialogs[this.id] = this;\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n     _renderModal() {\r\n\r\n        // Check if modal already exists for parent\r\n        const existingModal = this.parent.getElementsByClassName('flowui-modal')[0];\r\n        if (existingModal) {\r\n            this.modalObj = window['FlowUI']._modals[existingModal.id];\r\n            this.modalId = existingModal.id;\r\n        }\r\n        // Otherwise, create new instance\r\n        else {\r\n            this.modalObj = new window['FlowUI'].Modal({\r\n                id: this.modalId\r\n            });\r\n        }\r\n\r\n\r\n        // If dialog content requires http request, show loader before rendering\r\n        if (this.url || this.promise) {\r\n            this.loaderObj = new window['FlowUI'].Loader({\r\n                modalId: this.modalId\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Get Dialog Content (Async)\r\n     * @private\r\n     */\r\n    _getContent() {\r\n\r\n        // If promise provided during instantiation, use promise object instead to get content\r\n        if (this.promise) {\r\n            return this.promise;\r\n        }\r\n\r\n        let _this = this;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n\r\n            // Static content provided as property\r\n            if (_this.html) {\r\n                resolve(_this.html);\r\n            }\r\n\r\n            // Content from a partial or template retreived via http\r\n            else if (_this.url) {\r\n\r\n                // Do the usual XHR stuff\r\n                var req = new XMLHttpRequest();\r\n                req.open('GET', _this.url);\r\n\r\n                req.onload = function() {\r\n                    if (req.status == 200) {\r\n                        // Resolve the promise with the response text\r\n                        resolve(req.response);\r\n                    }\r\n                    else {\r\n                        reject(Error(req.statusText));\r\n                    }\r\n                };\r\n\r\n                req.onerror = function() {\r\n                    reject(Error(\"Network Error\"));\r\n                };\r\n\r\n                req.send();\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Render Dialog\r\n     * @private\r\n     */\r\n    _renderDialog() {\r\n\r\n        this._renderModal();\r\n\r\n        // Render Container\r\n        let container = document.createElement(\"div\");\r\n        container.setAttribute('id', this.dialogId);\r\n        container.setAttribute('class', 'flowui-dialog animated ' + (this.className ? this.className : ''));\r\n        //container.style.display = \"none\";\r\n\r\n        // Render Content Wrapper\r\n        let contentWrapper = document.createElement('div');\r\n        contentWrapper.setAttribute('class', 'content');\r\n        if (this.title) {\r\n            let title = document.createElement('div');\r\n            title.setAttribute('class', 'title');\r\n            title.innerHTML = this.title;\r\n            contentWrapper.appendChild(title);\r\n        }\r\n\r\n        // Render Inner Content\r\n        let content = document.createElement('div');\r\n        this._getContent().then((html) => {\r\n            content.innerHTML = html;\r\n            this._centerVertically();\r\n        });\r\n        content.setAttribute('class', 'inner-content');\r\n        contentWrapper.appendChild(content);\r\n\r\n        // Render Close Button\r\n        let closeButtonElement = document.createElement('a');\r\n        closeButtonElement.onclick = this._close.bind(this);\r\n        closeButtonElement.className = \"close\";\r\n        contentWrapper.appendChild(closeButtonElement);\r\n\r\n        // Render Buttons\r\n        if (this.buttons) {\r\n            let buttonsWrapper = document.createElement('div');\r\n            buttonsWrapper.setAttribute('class', 'buttons');\r\n            let x = 0;\r\n            this.buttons.forEach(function(button) {\r\n                let buttonElement = document.createElement(\"a\");\r\n                buttonElement.setAttribute('class', 'flowui-button button' + x++ + ' ' + (button.className || ''));\r\n                buttonElement.innerHTML = button.title;\r\n                buttonElement.onclick = button.onclick;\r\n                buttonsWrapper.appendChild(buttonElement);\r\n            });\r\n            contentWrapper.appendChild(buttonsWrapper);\r\n        }\r\n\r\n        container.appendChild(contentWrapper);\r\n\r\n        // Add to modal\r\n        let modalElement = document.getElementById(this.modalObj.id);\r\n        modalElement.appendChild(container);\r\n\r\n        // Store dialog element to global property\r\n        this.dialogElement = container;\r\n\r\n        // Once content loaded, display\r\n        this._getContent().then(() => {\r\n\r\n            // Hide Loader\r\n            if (this.loaderObj) {\r\n                this.loaderObj.close(false);\r\n            }\r\n\r\n            this._centerVertically();\r\n            this._focus();\r\n        });\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Viewport\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let dialogElement = document.getElementById(this.dialogId);\r\n        const modalHeight = document.getElementById(this.modalId).offsetHeight;\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        const dialogHeight = dialogElement.offsetHeight;\r\n        const dialogWidth = dialogElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // X & Y Coordinates\r\n        const x = (viewportWidth / 2) - (dialogWidth / 2);\r\n        const y = scrollPosition + (viewportHeight / 2) - (dialogHeight / 2);\r\n\r\n\r\n        dialogElement.style.top = y + 'px';\r\n        dialogElement.style.left = 'calc(50% - '+ (dialogWidth/2) +'px)';\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Handle Closing Dialog and removing from DOM\r\n     * @private\r\n     */\r\n    _close() {\r\n\r\n        if (this.events.onclose) {\r\n            this.events.onclose();\r\n        }\r\n        this._setState('closed');\r\n        this._dispose();\r\n\r\n        // Only close modal if there's no other dialogs using it\r\n        const modalHasChildDialogs = () =>\r\n        {\r\n            for (const key in window['FlowUI']._dialogs) {\r\n                let dialog = window['FlowUI']._dialogs[key];\r\n                if (dialog.modalId == this.modalId) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        if (!modalHasChildDialogs()) {\r\n            this.modalObj.close();\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove instance from global window scope and check if another dialog\r\n     * should be made active\r\n     * @private\r\n     */\r\n    _dispose() {\r\n\r\n        // TO DO: Element from Remove from DOM\r\n        setTimeout(()=> {\r\n            this.dialogElement.parentNode.removeChild(this.dialogElement);\r\n        }, 1000);\r\n\r\n\r\n        if (window['FlowUI']._dialogs[this.id]) {\r\n            delete window['FlowUI']._dialogs[this.id];\r\n        }\r\n        this._reactivatePreviousDiaog();\r\n    }\r\n\r\n    /**\r\n     * Reactives previous dialog (if any)\r\n     * @private\r\n     */\r\n    _reactivatePreviousDiaog() {\r\n        let allDialogs = window['FlowUI']._dialogs;\r\n        let previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]]\r\n        if (previousDialog) {\r\n            setTimeout(() => {\r\n                previousDialog._focus();\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Dialog State Change (focus, inactive, dismissed)\r\n     * @param e\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _onStateChange(e) {\r\n\r\n        // Strip out any animation-in/out classes\r\n        let normalizeClasses = () => {\r\n            let classes = document.getElementById(this.dialogId).className.trim().split(' ');\r\n            let normalized = [];\r\n            classes.forEach((className) => {\r\n                if (className != this.animation.in && className != this.animation.out && className != 'inactiveOut')\r\n            {\r\n                normalized.push(className);\r\n            }\r\n        });\r\n            return normalized.join(' ');\r\n        }\r\n\r\n        let className = normalizeClasses();\r\n\r\n        document.getElementById(this.dialogId).setAttribute(\"state\", e.detail.status);\r\n\r\n        switch (e.detail.status) {\r\n            case 'active':\r\n                document.getElementById(this.dialogId).className =  \"flowui-dialog animated \" + this.animation.in;\r\n                break;\r\n            case 'inactive':\r\n                if (Object.keys(window['FlowUI']._dialogs).length > 1) {\r\n                    document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\r\n                    break;\r\n                }\r\n                document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\r\n                break;\r\n            case 'closed':\r\n                document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\r\n                break;\r\n            default:\r\n                // catch all\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Set Dialog State (active, inactive)\r\n     * @private\r\n     */\r\n    _setState(state) {\r\n\r\n        var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\r\n        this.dialogElement.dispatchEvent(event);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Sets active dialog, and inactivates others\r\n     * @private\r\n     */\r\n    _focus() {\r\n\r\n        let _this = this;\r\n        this._setState(\"active\");\r\n\r\n        let allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\r\n        for (var key in allDialogs) {\r\n            var dialog = allDialogs[key];\r\n            if (dialog.dialogId != _this.dialogId) {\r\n                dialog._setState(\"inactive\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind any necessary events\r\n     * @private\r\n     */\r\n    _attachEvents() {\r\n\r\n        // Allow user to hit escape to close window (unless overwritten by param)\r\n        if (this.escapable) {\r\n            window.addEventListener(\"keyup\", (event) => {\r\n                this._close();\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Register for any event listeners\r\n     * @private\r\n     */\r\n    _registerEventListeners() {\r\n\r\n        // Listen for dialog state change event\r\n        this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.FlowUI = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     * Dialog Constructor\r\n     * @param props {\r\n     *  id: Unique ID for Dialog\r\n     *  title: Dialog Title\r\n     *  html: Html to inject\r\n     *  url: URL to inject content from\r\n     *  promise: Promise object to get content from\r\n     *  className: CSS class to add to element\r\n     *  parent: Element to inject modal (as query expression)\r\n     *  escapable: True to allow user to close via escape button (default)\r\n     *  animation: {\r\n     *   in: \"fadeIn\" | \"pulseIn\" | \"zoomIn\"\r\n     *   out: \"fadeOut\" | \"pulseOut\" | \"zooOut\"\r\n     *  }\r\n     *  events: {\r\n     *   onopen: function,\r\n     *   onclose: function\r\n     *  }\r\n     *  buttons: [\r\n     *      { title: \"Button Title\", onclick: function }\r\n     *  ]\r\n     * }\r\n     */\n    /* TO DO: Move classname, escapable, etc into an 'options' property */\n    function Dialog(_ref) {\n        var id = _ref.id;\n        var title = _ref.title;\n        var html = _ref.html;\n        var url = _ref.url;\n        var parent = _ref.parent;\n        var className = _ref.className;\n        var _ref$escapable = _ref.escapable;\n        var escapable = _ref$escapable === undefined ? true : _ref$escapable;\n        var _ref$animation = _ref.animation;\n        var animation = _ref$animation === undefined ? {} : _ref$animation;\n        var _ref$events = _ref.events;\n        var events = _ref$events === undefined ? {} : _ref$events;\n        var _ref$buttons = _ref.buttons;\n        var buttons = _ref$buttons === undefined ? [] : _ref$buttons;\n        var promise = _ref.promise;\n\n        _classCallCheck(this, Dialog);\n\n        // Arguments\n        this.id = id || new Date().getTime();\n        this.dialogId = \"dialog-\" + this.id; // ID for Dialog Element\n        this.modalId = \"modal-\" + this.id; // Generated ID for parent Modal\n        this.title = title;\n        this.html = html;\n        this.url = url;\n        this.promise = promise;\n        this.parent = parent ? (typeof parent === \"undefined\" ? \"undefined\" : _typeof(parent)) === 'object' ? parent : document.querySelector(parent) : document.body;\n        this.className = className;\n        this.modalObj;\n        this.loaderObj;\n        this.buttons = buttons;\n        this.escapable = escapable;\n\n        this.animation = {\n            in: animation.in || \"fadeIn\",\n            out: animation.out || \"fadeOut\"\n        };\n\n        this.events = {\n            onopen: events.onopen,\n            onclose: events.onclose\n        };\n\n        // Public Properties\n        this.dialogElement = null;\n\n        this._renderDialog();\n        this._attachEvents();\n        this._registerEventListeners();\n        this._exportObjInstance();\n    }\n\n    _createClass(Dialog, [{\n        key: \"_exportObjInstance\",\n\n\n        /**\r\n         * Save reference to instantiated dialog's to window\r\n         * so can access to object through DOM\r\n         * @private\r\n         */\n        value: function _exportObjInstance() {\n            window['FlowUI'] = window['FlowUI'] || {};\n            window['FlowUI']._dialogs = window['FlowUI']._dialogs || {};\n            window['FlowUI']._dialogs[this.id] = this;\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderModal\",\n        value: function _renderModal() {\n\n            // Check if modal already exists for parent\n            var existingModal = this.parent.getElementsByClassName('flowui-modal')[0];\n            if (existingModal) {\n                this.modalObj = window['FlowUI']._modals[existingModal.id];\n                this.modalId = existingModal.id;\n            }\n            // Otherwise, create new instance\n            else {\n                    this.modalObj = new window['FlowUI'].Modal({\n                        id: this.modalId\n                    });\n                }\n\n            // If dialog content requires http request, show loader before rendering\n            if (this.url || this.promise) {\n                this.loaderObj = new window['FlowUI'].Loader({\n                    modalId: this.modalId\n                });\n            }\n        }\n\n        /**\r\n         * Get Dialog Content (Async)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_getContent\",\n        value: function _getContent() {\n\n            // If promise provided during instantiation, use promise object instead to get content\n            if (this.promise) {\n                return this.promise;\n            }\n\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n\n                // Static content provided as property\n                if (_this.html) {\n                    resolve(_this.html);\n                }\n\n                // Content from a partial or template retreived via http\n                else if (_this.url) {\n\n                        // Do the usual XHR stuff\n                        var req = new XMLHttpRequest();\n                        req.open('GET', _this.url);\n\n                        req.onload = function () {\n                            if (req.status == 200) {\n                                // Resolve the promise with the response text\n                                resolve(req.response);\n                            } else {\n                                reject(Error(req.statusText));\n                            }\n                        };\n\n                        req.onerror = function () {\n                            reject(Error(\"Network Error\"));\n                        };\n\n                        req.send();\n                    }\n            });\n        }\n\n        /**\r\n         * Render Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderDialog\",\n        value: function _renderDialog() {\n            var _this2 = this;\n\n            this._renderModal();\n\n            // Render Container\n            var container = document.createElement(\"div\");\n            container.setAttribute('id', this.dialogId);\n            container.setAttribute('class', 'flowui-dialog animated ' + (this.className ? this.className : ''));\n            //container.style.display = \"none\";\n\n            // Render Content Wrapper\n            var contentWrapper = document.createElement('div');\n            contentWrapper.setAttribute('class', 'content');\n            if (this.title) {\n                var title = document.createElement('div');\n                title.setAttribute('class', 'title');\n                title.innerHTML = this.title;\n                contentWrapper.appendChild(title);\n            }\n\n            // Render Inner Content\n            var content = document.createElement('div');\n            this._getContent().then(function (html) {\n                content.innerHTML = html;\n                _this2._centerVertically();\n            });\n            content.setAttribute('class', 'inner-content');\n            contentWrapper.appendChild(content);\n\n            // Render Close Button\n            var closeButtonElement = document.createElement('a');\n            closeButtonElement.onclick = this._close.bind(this);\n            closeButtonElement.className = \"close\";\n            contentWrapper.appendChild(closeButtonElement);\n\n            // Render Buttons\n            if (this.buttons) {\n                (function () {\n                    var buttonsWrapper = document.createElement('div');\n                    buttonsWrapper.setAttribute('class', 'buttons');\n                    var x = 0;\n                    _this2.buttons.forEach(function (button) {\n                        var buttonElement = document.createElement(\"a\");\n                        buttonElement.setAttribute('class', 'flowui-button button' + x++ + ' ' + (button.className || ''));\n                        buttonElement.innerHTML = button.title;\n                        buttonElement.onclick = button.onclick;\n                        buttonsWrapper.appendChild(buttonElement);\n                    });\n                    contentWrapper.appendChild(buttonsWrapper);\n                })();\n            }\n\n            container.appendChild(contentWrapper);\n\n            // Add to modal\n            var modalElement = document.getElementById(this.modalObj.id);\n            modalElement.appendChild(container);\n\n            // Store dialog element to global property\n            this.dialogElement = container;\n\n            // Once content loaded, display\n            this._getContent().then(function () {\n\n                // Hide Loader\n                if (_this2.loaderObj) {\n                    _this2.loaderObj.close(false);\n                }\n\n                _this2._centerVertically();\n                _this2._focus();\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Viewport\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_centerVertically\",\n        value: function _centerVertically() {\n\n            var dialogElement = document.getElementById(this.dialogId);\n            var modalHeight = document.getElementById(this.modalId).offsetHeight;\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n            var dialogHeight = dialogElement.offsetHeight;\n            var dialogWidth = dialogElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // X & Y Coordinates\n            var x = viewportWidth / 2 - dialogWidth / 2;\n            var y = scrollPosition + viewportHeight / 2 - dialogHeight / 2;\n\n            dialogElement.style.top = y + 'px';\n            dialogElement.style.left = 'calc(50% - ' + dialogWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handle Closing Dialog and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_close\",\n        value: function _close() {\n            var _this3 = this;\n\n            if (this.events.onclose) {\n                this.events.onclose();\n            }\n            this._setState('closed');\n            this._dispose();\n\n            // Only close modal if there's no other dialogs using it\n            var modalHasChildDialogs = function modalHasChildDialogs() {\n                for (var key in window['FlowUI']._dialogs) {\n                    var dialog = window['FlowUI']._dialogs[key];\n                    if (dialog.modalId == _this3.modalId) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n\n            if (!modalHasChildDialogs()) {\n                this.modalObj.close();\n            }\n        }\n\n        /**\r\n         * Remove instance from global window scope and check if another dialog\r\n         * should be made active\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_dispose\",\n        value: function _dispose() {\n            var _this4 = this;\n\n            // TO DO: Element from Remove from DOM\n            setTimeout(function () {\n                _this4.dialogElement.parentNode.removeChild(_this4.dialogElement);\n            }, 1000);\n\n            if (window['FlowUI']._dialogs[this.id]) {\n                delete window['FlowUI']._dialogs[this.id];\n            }\n            this._reactivatePreviousDiaog();\n        }\n\n        /**\r\n         * Reactives previous dialog (if any)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_reactivatePreviousDiaog\",\n        value: function _reactivatePreviousDiaog() {\n            var allDialogs = window['FlowUI']._dialogs;\n            var previousDialog = allDialogs[Object.keys(allDialogs)[Object.keys(allDialogs).length - 1]];\n            if (previousDialog) {\n                setTimeout(function () {\n                    previousDialog._focus();\n                }, 500);\n            }\n        }\n\n        /**\r\n         * Handle Dialog State Change (focus, inactive, dismissed)\r\n         * @param e\r\n         * @returns {string}\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_onStateChange\",\n        value: function _onStateChange(e) {\n            var _this5 = this;\n\n            // Strip out any animation-in/out classes\n            var normalizeClasses = function normalizeClasses() {\n                var classes = document.getElementById(_this5.dialogId).className.trim().split(' ');\n                var normalized = [];\n                classes.forEach(function (className) {\n                    if (className != _this5.animation.in && className != _this5.animation.out && className != 'inactiveOut') {\n                        normalized.push(className);\n                    }\n                });\n                return normalized.join(' ');\n            };\n\n            var className = normalizeClasses();\n\n            document.getElementById(this.dialogId).setAttribute(\"state\", e.detail.status);\n\n            switch (e.detail.status) {\n                case 'active':\n                    document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.in;\n                    break;\n                case 'inactive':\n                    if (Object.keys(window['FlowUI']._dialogs).length > 1) {\n                        document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\n                        break;\n                    }\n                    document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\n                    break;\n                case 'closed':\n                    document.getElementById(this.dialogId).className = \"flowui-dialog animated \" + this.animation.out;\n                    break;\n                default:\n                // catch all\n            }\n        }\n\n        /**\r\n         * Set Dialog State (active, inactive)\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_setState\",\n        value: function _setState(state) {\n\n            var event = new CustomEvent(\"stateChange\", { detail: { status: state } });\n            this.dialogElement.dispatchEvent(event);\n        }\n\n        /**\r\n         * Sets active dialog, and inactivates others\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_focus\",\n        value: function _focus() {\n\n            var _this = this;\n            this._setState(\"active\");\n\n            var allDialogs = window['FlowUI'] ? window['FlowUI']._dialogs : {};\n            for (var key in allDialogs) {\n                var dialog = allDialogs[key];\n                if (dialog.dialogId != _this.dialogId) {\n                    dialog._setState(\"inactive\");\n                }\n            }\n        }\n\n        /**\r\n         * Bind any necessary events\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_attachEvents\",\n        value: function _attachEvents() {\n            var _this6 = this;\n\n            // Allow user to hit escape to close window (unless overwritten by param)\n            if (this.escapable) {\n                window.addEventListener(\"keyup\", function (event) {\n                    _this6._close();\n                });\n            }\n        }\n\n        /**\r\n         * Register for any event listeners\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_registerEventListeners\",\n        value: function _registerEventListeners() {\n\n            // Listen for dialog state change event\n            this.dialogElement.addEventListener('stateChange', this._onStateChange.bind(this), false);\n        }\n    }, {\n        key: \"close\",\n        get: function get() {\n            return this._close;\n        }\n    }, {\n        key: \"centerVertically\",\n        get: function get() {\n            return this._centerVertically;\n        }\n    }]);\n\n    return Dialog;\n}();\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n// Dependencies\n\nvar Modal = require('../../modal/js/modal.js');\nvar Loader = require('../../loader/js/loader.js');\n\n// Core Module\nvar Dialog = require('./dialog.js');\n\n// Export\nmodule.exports = {\n    Modal: Modal,\n    Loader: Loader,\n    Dialog: Dialog\n};\n\n},{\"../../loader/js/loader.js\":3,\"../../modal/js/modal.js\":4,\"./dialog.js\":1}],3:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\n    function Loader() {\n        var props = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        _classCallCheck(this, Loader);\n\n        this.loaderId = props.id || \"loader-\" + new Date().getTime();\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\n        this.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n        this.modalObj;\n\n        this._render();\n    }\n\n    _createClass(Loader, [{\n        key: \"_render\",\n\n\n        /**\r\n         *\r\n         * @private\r\n         */\n        value: function _render() {\n\n            this._renderModal();\n\n            // Check that element doesn't already exist\n            if (!document.getElementById(this.loaderId)) {\n                var container = document.createElement(\"div\");\n                container.id = this.loaderId;\n                container.className = \"flowui-loader\";\n\n                var loaderElement = document.createElement(\"div\");\n                loaderElement.className = \"spinner\";\n                container.appendChild(loaderElement);\n\n                document.getElementById(this.modalObj.id).appendChild(container);\n            }\n\n            this._centerVertically();\n            this._animateIn();\n        }\n\n        /**\r\n         * Render Modal\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_renderModal\",\n        value: function _renderModal() {\n            this.modalObj = new window['FlowUI'].Modal({\n                id: this.modalId,\n                parent: this.parent\n            });\n        }\n\n        /**\r\n         * Centre Dialog Vertically in Parent Element\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_centerVertically\",\n        value: function _centerVertically() {\n\n            var loaderElement = document.getElementById(this.loaderId);\n            var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n            var parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\n            var loaderHeight = loaderElement.offsetHeight;\n            var loaderWidth = loaderElement.offsetWidth;\n            var scrollPosition = window.scrollY;\n\n            // Center vertically in parent container\n            var topLoaderDiv = parentHeight / 2 - loaderHeight / 2;\n\n            // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\n            if (parentHeight > viewportHeight) {\n                topLoaderDiv = viewportHeight / 2 - loaderHeight / 2;\n\n                // If user is scrolled down at all, we need to adjust to make sure loader\n                // is displayed within current viewport\n                if (scrollPosition > 0) {\n                    topLoaderDiv += scrollPosition;\n                }\n            }\n\n            loaderElement.style.top = topLoaderDiv + \"px\";\n            loaderElement.style.left = 'calc(50% - ' + loaderWidth / 2 + 'px)';\n        }\n\n        /**\r\n         * Handles Animating Dialog In\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateIn\",\n        value: function _animateIn() {\n            var _this = this;\n\n            setTimeout(function () {\n                document.getElementById(_this.loaderId).className += \" animated zoomInLoader\";\n                document.getElementById(_this.loaderId).style.display = \"\";\n            }, 400);\n        }\n\n        /**\r\n         * Handle Animating Out Dialog\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_animateOut\",\n        value: function _animateOut() {\n            document.getElementById(this.loaderId).className += \" zoomOutLoader\";\n        }\n\n        /**\r\n         * Handle Closing and removing from DOM\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_close\",\n        value: function _close() {\n            var dispose = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n            this._animateOut();\n            if (dispose) {\n                this.modalObj.close();\n                this._dispose();\n            }\n        }\n\n        /**\r\n         * Remove from DOM and remove object\r\n         * @private\r\n         */\n\n    }, {\n        key: \"_dispose\",\n        value: function _dispose() {\n            delete this;\n        }\n    }, {\n        key: \"close\",\n        get: function get() {\n            return this._close;\n        }\n    }]);\n\n    return Loader;\n}();\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * Modal Constructor\n  * @param props\n  * @param.id : Modal Id\n  * @param.parent : Parent element to inject modal into\n  * @param.className : Class names to append to modal\n     */\n\tfunction Modal(props) {\n\t\t_classCallCheck(this, Modal);\n\n\t\tprops = props || {};\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? _typeof(props.parent) === 'object' ? props.parent : document.querySelector(props.parent) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.close = this._close;\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\t/**\n  * Save reference to instantiated modal to window\n  * so can access to object through DOM\n  * @private\n  */\n\n\n\t_createClass(Modal, [{\n\t\tkey: '_exportObjInstance',\n\t\tvalue: function _exportObjInstance() {\n\t\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\t\twindow['FlowUI']._modals[this.id] = this;\n\t\t}\n\n\t\t/**\n   * Render Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_render',\n\t\tvalue: function _render() {\n\n\t\t\tif (!document.getElementById(this.id)) {\n\n\t\t\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\t\t\tvar container = document.createElement(\"div\");\n\t\t\t\tcontainer.setAttribute(\"id\", this.id);\n\t\t\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\t\t\tthis.parent.appendChild(container);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Close Modal\n   * @private\n   */\n\n\t}, {\n\t\tkey: '_close',\n\t\tvalue: function _close() {\n\t\t\tvar _this = this;\n\n\t\t\tvar modalElement = document.getElementById(this.id);\n\t\t\tmodalElement.className += \" fadeOut\";\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tmodalElement.parentNode.removeChild(modalElement);\n\t\t\t\t_this.parent.className = _this.parent.className.replace('flowui-modal-parent', '');\n\t\t\t}, 1000);\n\t\t}\n\t}]);\n\n\treturn Modal;\n}();\n\n},{}]},{},[2])(2)\n});\n\n","'use strict';\r\n\r\n// Dependencies\r\nconst Modal = require('../../modal/js/modal.js');\r\nconst Loader = require('../../loader/js/loader.js');\r\n\r\n// Core Module\r\nconst Dialog = require('./dialog.js');\r\n\r\n// Export\r\nmodule.exports = {\r\n    Modal: Modal,\r\n    Loader: Loader,\r\n    Dialog: Dialog\r\n}","'use strict';\r\n\r\nmodule.exports = class Loader {\r\n\r\n    /**\r\n     *\r\n     * @param props\r\n     * props.text : text to display while loading\r\n     * props.parent : parent element to inject loader into\r\n     * props.promise : if provided, loader will close when promise resolved\r\n     * props.id : id of loader\r\n     */\r\n    constructor(props = {}) {\r\n\r\n        this.loaderId = props.id || \"loader-\" + new Date().getTime();\r\n        this.modalId = props.modalId || \"loader-modal-\" + new Date().getTime(); // Generated ID for parent Modal\r\n        this.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\r\n        this.modalObj;\r\n\r\n        this._render();\r\n\r\n    }\r\n\r\n\r\n    get close() {\r\n        return this._close;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    _render() {\r\n\r\n        this._renderModal();\r\n\r\n        // Check that element doesn't already exist\r\n        if (!document.getElementById(this.loaderId)) {\r\n            let container = document.createElement(\"div\");\r\n            container.id = this.loaderId;\r\n            container.className = \"flowui-loader\";\r\n\r\n            let loaderElement = document.createElement(\"div\");\r\n            loaderElement.className = \"spinner\";\r\n            container.appendChild(loaderElement);\r\n\r\n            document.getElementById(this.modalObj.id).appendChild(container);\r\n        }\r\n\r\n        this._centerVertically();\r\n        this._animateIn();\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Render Modal\r\n     * @private\r\n     */\r\n    _renderModal() {\r\n        this.modalObj = new window['FlowUI'].Modal({\r\n            id: this.modalId,\r\n            parent: this.parent\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Centre Dialog Vertically in Parent Element\r\n     * @private\r\n     */\r\n    _centerVertically() {\r\n\r\n        let loaderElement = document.getElementById(this.loaderId);\r\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const parentHeight = Math.max(this.parent.clientHeight, this.parent.innerHeight || 0);\r\n        const loaderHeight = loaderElement.offsetHeight;\r\n        const loaderWidth = loaderElement.offsetWidth;\r\n        const scrollPosition = window.scrollY;\r\n\r\n        // Center vertically in parent container\r\n        let topLoaderDiv = (parentHeight / 2) - (loaderHeight / 2);\r\n\r\n        // If parentHeight is >= viewportHeight, we need to use viewportHeight instead\r\n        if (parentHeight > viewportHeight) {\r\n            topLoaderDiv = (viewportHeight / 2) - (loaderHeight / 2);\r\n\r\n            // If user is scrolled down at all, we need to adjust to make sure loader\r\n            // is displayed within current viewport\r\n            if (scrollPosition > 0) {\r\n                topLoaderDiv += scrollPosition;\r\n            }\r\n        }\r\n\r\n        loaderElement.style.top = topLoaderDiv + \"px\";\r\n        loaderElement.style.left = 'calc(50% - ' + (loaderWidth/2)  + 'px)';\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles Animating Dialog In\r\n     * @private\r\n     */\r\n    _animateIn() {\r\n\r\n        setTimeout(() => {\r\n            document.getElementById(this.loaderId).className += \" animated zoomInLoader\";\r\n            document.getElementById(this.loaderId).style.display = \"\";\r\n        }, 400);\r\n\r\n    }\r\n\r\n    /**\r\n     * Handle Animating Out Dialog\r\n     * @private\r\n     */\r\n    _animateOut() {\r\n        document.getElementById(this.loaderId).className += \" zoomOutLoader\";\r\n    }\r\n\r\n\r\n    /**\r\n     * Handle Closing and removing from DOM\r\n     * @private\r\n     */\r\n    _close(dispose = true) {\r\n        this._animateOut();\r\n        if (dispose) {\r\n            this.modalObj.close();\r\n            this._dispose();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Remove from DOM and remove object\r\n     * @private\r\n     */\r\n    _dispose() {\r\n        delete this;\r\n    }\r\n\r\n\r\n\r\n}","'use strict';\n\nmodule.exports = class Modal {\n\n\t/**\n\t * Modal Constructor\n\t * @param props\n\t * @param.id : Modal Id\n\t * @param.parent : Parent element to inject modal into\n\t * @param.className : Class names to append to modal\n     */\n\tconstructor(props) {\n\t\tprops = props || {};\n\t\tthis.id = props.id || \"modal-\" + new Date().getTime();\n\t\tthis.parent = props.parent ? (typeof props.parent === 'object' ? props.parent : document.querySelector(props.parent)) : document.body;\n\t\tthis.className = props.className || \"\";\n\t\tthis.close  = this._close;\n\n\t\tthis._render();\n\t\tthis._exportObjInstance();\n\t}\n\n\n\t/**\n\t * Save reference to instantiated modal to window\n\t * so can access to object through DOM\n\t * @private\n\t */\n\t_exportObjInstance() {\n\t\twindow['FlowUI'] = window['FlowUI'] || {};\n\t\twindow['FlowUI']._modals = window['FlowUI']._modals || {};\n\t\twindow['FlowUI']._modals[this.id] = this;\n\t}\n\n\n\t/**\n\t * Render Modal\n\t * @private\n\t */\n\t_render() {\n\n\t\tif (!document.getElementById(this.id)) {\n\n\t\t\tthis.parent.className += ' flowui-modal-parent';\n\n\t\t\tconst container = document.createElement(\"div\");\n\t\t\tcontainer.setAttribute(\"id\", this.id);\n\t\t\tcontainer.setAttribute(\"class\", 'flowui-modal animated fadeIn ' + this.className);\n\t\t\tthis.parent.appendChild(container);\n\t\t}\n\t}\n\n\t/**\n\t * Close Modal\n\t * @private\n\t */\n\t_close() {\n\n        let modalElement = document.getElementById(this.id);\n        modalElement.className += \" fadeOut\";\n\n        setTimeout(() => {\n            modalElement.parentNode.removeChild(modalElement);\n\t\t\tthis.parent.className = this.parent.className.replace('flowui-modal-parent', '');\n        }, 1000);\n\t}\n\n}\n\n"],"sourceRoot":"/source/"}